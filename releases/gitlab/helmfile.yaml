---
bases:
  - "../../bases/helmDefaults.yaml"
  - "../../bases/environments.yaml"

---
hooks:
  - events: ["prepare"]
    showlogs: true
    command: "../../bin/gitlab-access.sh"
    args: ["disable"]
  - events: ["cleanup"]
    showlogs: true
    command: "../../bin/gitlab-access.sh"
    args: ["enable"]

releases:
  - name: {{.Environment.Values | getOrNil "gitlab_release_name" | default "gitlab"}}
    labels:
      autodeploy: true
    namespace: {{.Environment.Values | getOrNil "gitlab_namespace" | default "gitlab"}}
    chart: "../../charts/gitlab/{{ .Values.env_prefix }}"
    set:
      - name: "global.deployment.annotations.app\\.gitlab\\.com/app"
        value: {{env "CI_PROJECT_PATH_SLUG" | default "gitlab-com-gl-infra-k8s-workloads-gitlab-com"}}
      - name: "global.deployment.annotations.app\\.gitlab\\.com/env"
        value: {{env "CI_ENVIRONMENT_SLUG" | default .Environment.Name}}
      - name: "global.registry.bucket"
        value: 'gitlab-{{`{{ .Environment.Values | getOrNil "env_prefix" | default .Environment.Name }}`}}-registry'

      - name: "registry.annotations.app\\.gitlab\\.com/app"
        value: {{env "CI_PROJECT_PATH_SLUG" | default "gitlab-com-gl-infra-k8s-workloads-gitlab-com"}}
      - name: "registry.annotations.app\\.gitlab\\.com/env"
        value: {{env "CI_ENVIRONMENT_SLUG" | default .Environment.Name}}
    values:
      - values/init-values.yaml.gotmpl
      - values/values.yaml.gotmpl
{{ if .Values | getOrNil "env_prefix" | default false }}
      - 'values/{{ .Environment.Values.env_prefix }}.yaml.gotmpl'
{{ end }}
      - 'values/{{ .Environment.Name }}.yaml.gotmpl'
{{- if eq ( .Environment.Values | getOrNil "env_prefix" | default .Environment.Name) "gprd" }}
      - values/values-from-external-sources.yaml.gotmpl
{{- end }}
