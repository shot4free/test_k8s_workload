---

# Force PreProd config for https://gitlab.com/gitlab-com/gl-infra/k8s-workloads/gitlab-com/-/merge_requests/1163
nginx-ingress:
  controller:
    affinity:
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - ingress-nginx
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - ingress-nginx
                  - key: app.kubernetes.io/component
                    operator: In
                    values:
                      - controller
              topologyKey: kubernetes.io/hostname
    nodeSelector:
      cloud.google.com/gke-nodepool: default-2

registry:
  database:
    enabled: true
    host: 10.33.1.2
    user: registry
    name: registry_production
    password:
      secret: registry-postgresql-password-v1
    pool:
      maxopen: 5
      maxidle: 5
      maxlifetime: 5m
  migration:
    enabled: true
    disablemirrorfs: true
    rootdirectory: gitlab
  nodeSelector:
    cloud.google.com/gke-nodepool: default-2
  gc:
    disabled: false
    maxbackoff: 30m
    reviewafter: 5m
    noidlebackoff: true
  service:
    # gcloud compute address registry-gke-pre
    loadBalancerIP: 10.232.20.237
  storage:
    secret: registry-storage-v4
  maintenance:
    uploadpurging:
      enabled: false

gitlab:
  gitlab-pages:
    common:
      labels:
        type: web-pages
    deployment:
      strategy:
        rollingUpdate:
          maxSurge: 25%
          maxUnavailable: 0
    extraEnv:
      GITLAB_CONTINUOUS_PROFILING: "stackdriver?service=gitlab-pages"
      FF_ENABLE_REDIRECTS: "true"
      FF_ENABLE_PLACEHOLDERS: "true"
    headers:
      - "Permissions-Policy: interest-cohort=()"
    image:
      repository: dev.gitlab.org:5005/gitlab/charts/components/images/gitlab-pages
      pullSecrets:
        - name: dev-registry-access-v1
    internalGitlabServer: "http://{{ .Release.Name }}-webservice-api.{{ .Release.Name }}.svc:8181"
    networkpolicy:
      enabled: true
      egress:
        enabled: true
        rules:
        - to:
          - ipBlock:
              cidr: 10.0.0.0/8
          ports:
          - port: 53
            protocol: UDP
          - port: 53
            protocol: TCP
          - port: 8181
            protocol: TCP
        - to:
          - ipBlock:
              cidr: 0.0.0.0/0
              except:
              - 10.0.0.0/8
              - 169.254.169.254/32
    propagateCorrelationId: true
    sentry:
      enabled: true
      dsn: https://11221aa4bbdf40f3ad857b8959012b23@sentry.gitlab.net/104
      environment: {{ .Environment.Name }}
    service:
      annotations:
        cloud.google.com/load-balancer-type: Internal
    statusUri: "/-/readiness"
    useProxyV2: true

  webservice:
    hpa:
      minReplicas: 2
      maxReplicas: 5
    # blackoutSeconds, minReplicas, initialDelaySeconds, terminationGracePeriodSeconds
    # set temporarily for
    # testing https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/1509
    shutdown:
      blackoutSeconds: 0
    deployments:
      api:
        extraEnv:
          GITLAB_CONTINUOUS_PROFILING: stackdriver?service=workhorse-api
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"api\", \"stage\": \"main\"}"
        ingress:
          path: '/api'
        nodeSelector:
          cloud.google.com/gke-nodepool: default-2
      git:
        nodeSelector:
          cloud.google.com/gke-nodepool: default-2
        shutdown:
          blackoutSeconds: 0
      web:
        nodeSelector:
          cloud.google.com/gke-nodepool: default-2
      websockets:
        deployment:
          readinessProbe:
            initialDelaySeconds: 0
          terminationGracePeriodSeconds: 30
        nodeSelector:
          cloud.google.com/gke-nodepool: default-2
        shutdown:
          blackoutSeconds: 0
    workerProcesses: 2
    workhorse:
      resources:
        limits:
          memory: 1G
        requests:
          cpu: 100m
          memory: 50M
    resources:
      limits:
        memory: 4.0G
      requests:
        cpu: 1
        memory: 1.25G
    extraEnv:
      DISABLE_PUMA_NAKAYOSHI_FORK: "true"
  gitlab-shell:
    minReplicas: 2
    maxReplicas: 5
    nodeSelector:
      cloud.google.com/gke-nodepool: default-2
    service:
      # gcloud compute address ssh-gke-pre
      loadBalancerIP: 10.232.20.28
  mailroom:
    nodeSelector:
      cloud.google.com/gke-nodepool: default-2
  sidekiq:
    pods:
      - name: catchall
        common:
          labels:
            shard: catchall
        nodeSelector:
          cloud.google.com/gke-nodepool: default-2
        concurrency: 25
        minReplicas: 1
        maxReplicas: 5
    psql:
      host: 10.33.1.14
  kas:
    image:
      tag: v14.4.0-rc1-race
    hpa:
      minReplicas: 1
      maxReplicas: 5
    nodeSelector:
      cloud.google.com/gke-nodepool: default-2
    service:
      # gcloud compute address kas-internal-gke-pre
      loadBalancerIP: 10.232.20.117
global:
  appConfig:
    artifacts:
      bucket: gitlab-pre-artifacts
    contentSecurityPolicy:
      enabled: true
      report_only: false
      directives:
        connect_src: "'self' https://pre.gitlab.com https://pre.gitlab-static.net wss://pre.gitlab.com https://sentry.gitlab.net https://customers.gitlab.com https://snowplow.trx.gitlab.net https://sourcegraph.com https://ec2.ap-east-1.amazonaws.com https://ec2.ap-northeast-1.amazonaws.com https://ec2.ap-northeast-2.amazonaws.com https://ec2.ap-northeast-3.amazonaws.com https://ec2.ap-south-1.amazonaws.com https://ec2.ap-southeast-1.amazonaws.com https://ec2.ap-southeast-2.amazonaws.com https://ec2.ca-central-1.amazonaws.com https://ec2.eu-central-1.amazonaws.com https://ec2.eu-north-1.amazonaws.com https://ec2.eu-west-1.amazonaws.com https://ec2.eu-west-2.amazonaws.com https://ec2.eu-west-3.amazonaws.com https://ec2.me-south-1.amazonaws.com https://ec2.sa-east-1.amazonaws.com https://ec2.us-east-1.amazonaws.com https://ec2.us-east-2.amazonaws.com https://ec2.us-west-1.amazonaws.com https://ec2.us-west-2.amazonaws.com https://ec2.af-south-1.amazonaws.com https://iam.amazonaws.com"
        default_src: "'self' https://pre.gitlab-static.net"
        frame_ancestors: "'self'"
        frame_src: "'self' https://pre.gitlab-static.net https://www.google.com/recaptcha/ https://www.recaptcha.net/ https://content.googleapis.com https://content-cloudresourcemanager.googleapis.com https://content-compute.googleapis.com https://content-cloudbilling.googleapis.com https://*.codesandbox.io"
        img_src: "* data: blob:"
        object_src: "'none'"
        report_uri: "https://sentry.gitlab.net/api/22/security/?sentry_key=e9401448c5c04c39823793199b8f7c49"
        script_src: "'self' 'unsafe-inline' 'unsafe-eval' https://pre.gitlab-static.net https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ https://www.recaptcha.net/ https://apis.google.com"
        style_src: "'self' 'unsafe-inline' https://pre.gitlab-static.net"
        worker_src: "https://pre.gitlab-static.net https://pre.gitlab.com blob: data:"
    dependencyProxy:
      enabled: true
      bucket: gitlab-pre-dependency-proxy
    externalDiffs:
      bucket: gitlab-pre-external-diffs
    incomingEmail:
      address: "incoming-pre+%{key}@incoming.gitlab.com"
      user: incoming-pre@incoming.gitlab.com
    lfs:
      bucket: gitlab-pre-lfs-objects
    omniauth:
      providers:
        - secret: gitlab-google-oauth2-v1
    packages:
      bucket: gitlab-pre-package-repo
    sentry:
      dsn: https://e9401448c5c04c39823793199b8f7c49@sentry.gitlab.net/22
    terraformState:
      bucket: gitlab-pre-terraform-state
    uploads:
      bucket: gitlab-pre-uploads

  email:
    from: notify@mg.pre.gitlab.com
    reply_to: noreply@pre.gitlab.com

  hosts:
    # gcloud compute address nginx-gke-pre
    externalIP: 10.232.20.81
    gitlab:
      name: pre.gitlab.com
    kas:
      name: kas.pre.gitlab.com
    registry:
      name: registry.pre.gitlab.com
  ingress:
    tls:
      secretName: gitlab-pages-tls-certificate-v1
  oauth:
    gitlab-pages:
      secret: gitlab-pages-auth-client-secret-v1
  pages:
    accessControl: true
    authSecret:
      secret: gitlab-pages-auth-secret-v1
    enabled: true
    # gcloud compute address pages-gke-pre
    externalHttp:
      - 10.232.20.119
    externalHttps:
      - 10.232.20.119
    host: pre.gitlab.io
  psql:
    host: 10.33.1.14
  redis:
    host: 10.232.7.3
    password:
      enabled: false
      key: secret
      secret: gitlab-redis-credential-v1
    port: "6379"
  smtp:
    domain: mg.pre.gitlab.com
    user_name: postmaster@mg.pre.gitlab.com
  shell:
    hostKeys:
      secret: gitlab-hostkeys-v1
