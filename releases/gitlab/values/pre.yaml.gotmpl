---

# Needed for now, because a check in the registry chart is insisting on it.
# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2615
postgresql:
  image:
    tag: 12

registry:
  database:
    enabled: true
    host: 10.33.1.2
    user: registry
    name: registry_production
    password:
      secret: registry-postgresql-password-v1
    pool:
      maxopen: 5
      maxidle: 5
      maxlifetime: 5m
  migration:
    disablemirrorfs: true
  gc:
    disabled: false
    maxbackoff: 30m
    reviewafter: 5m
    noidlebackoff: true

gitlab:
  webservice:
    hpa:
      minReplicas: 1
      maxReplicas: 5
    # blackoutSeconds, minReplicas, initialDelaySeconds, terminationGracePeriodSeconds
    # set temporarily for
    # testing https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/1509
    shutdown:
      blackoutSeconds: 0
    deployments:
      api:
        extraEnv:
          GITLAB_CONTINUOUS_PROFILING: stackdriver?service=workhorse-api
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"api\", \"stage\": \"main\"}"
        nodeSelector:
          type: default
      # Preprod does not have node-pools so the default node selectors
      # are overridden to default
      git:
        nodeSelector:
          type: default
      websockets:
        deployment:
          readinessProbe:
            initialDelaySeconds: 0
          terminationGracePeriodSeconds: 30
        nodeSelector:
          type: default
    workerProcesses: 2
    workhorse:
      resources:
        limits:
          memory: 1G
        requests:
          cpu: 100m
          memory: 50M
    resources:
      limits:
        memory: 3.0G
      requests:
        cpu: 1
        memory: 1.25G
    extraEnv:
      DISABLE_PUMA_NAKAYOSHI_FORK: "true"
      GITLAB_SIDEKIQ_SIZE_LIMITER_MODE: track
      GITLAB_SIDEKIQ_SIZE_LIMITER_LIMIT_BYTES: 100000
      ENABLE_RAILS_61_CONNECTION_HANDLING: "true"
  gitlab-shell:
    minReplicas: 1
    maxReplicas: 5
    workhorse:
      # This is the internal API endpoint for GitLab Shell
      # Currently we are using the same deployments that is
      # used for https Git. Once we have a dedicated API deployment
      # we may want to use that instead
      # https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/1401
      # This should move to values.yaml.gotmp once
      # https://gitlab.com/gitlab-com/gl-infra/production/-/issues/3155 is complete
      host: gitlab-webservice-git.gitlab.svc
    nodeSelector:
      type: default
  mailroom:
    nodeSelector:
      type: default
  sidekiq:
    extraEnv:
      ENABLE_RAILS_61_CONNECTION_HANDLING: "true"
    pods:
        # This is set to "memory-bound" until
        # catchall is migrated to production.
        # The reason for this is because we derive
        # the image version from the memory-bound deployment
      - name: memory-bound
        common:
          labels:
            shard: memory-bound
        nodeSelector:
          type: default
        concurrency: 25
        minReplicas: 1
        maxReplicas: 5
  kas:
    hpa:
      minReplicas: 1
      maxReplicas: 5
    nodeSelector:
      type: default
global:
  appConfig:
    incomingEmail:
      enabled: true
    omniauth:
      providers:
        - secret: gitlab-google-oauth2-v1
  email:
    reply_to: noreply@gitlab.com

  hosts:
    gitlab:
      name: pre.gitlab.com
    kas:
      name: kas.pre.gitlab.com

  smtp:
    enabled: true
    password:
      key: secret
      secret: gitlab-smtp-credential-v1
