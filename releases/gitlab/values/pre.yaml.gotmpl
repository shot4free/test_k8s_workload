---

# Needed for now, because a check in the registry chart is insisting on it.
# https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2615
postgresql:
  image:
    tag: 12

registry:
  database:
    enabled: true
    host: 10.33.1.2
    user: registry
    name: registry_production
    password:
      secret: registry-postgresql-password-v1
    pool:
      maxopen: 5
      maxidle: 5
      maxlifetime: 5m
  migration:
    disablemirrorfs: true

gitlab:
  webservice:
    # blackoutSeconds, minReplicas, initialDelaySeconds, terminationGracePeriodSeconds
    # set temporarily for
    # testing https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/1509
    shutdown:
      blackoutSeconds: 0
    deployments:
      api:
        common:
          labels:
            type: api
        hpa:
          minReplicas: 1
        extraEnv:
          GITLAB_CONTINUOUS_PROFILING: stackdriver?service=workhorse-api
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"api\", \"stage\": \"main\"}"
        nodeSelector:
          type: default
        service:
          # Note that we are creating a loadbalancer, but not yet using it,
          # This will come to use in issue: https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/1557
          loadBalancerIP: {{ exec "gcloud" (list "--project" .Environment.Values.google_project "compute" "addresses" "list" "--filter" (printf "name=api-gke-%s" .Environment.Name) "--format" "value(address)" "--verbosity" "error") }}
          type: LoadBalancer
          loadBalancerSourceRanges:
            - 10.0.0.0/8
          annotations:
            cloud.google.com/load-balancer-type: Internal
        shutdown:
          blackoutSeconds: 10
        deployment:
          terminationGracePeriodSeconds: 15
        maxUnavailable: 0
        ingress:
          annotations:
            nginx.ingress.kubernetes.io/proxy-buffering: "on"
            nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
            nginx.ingress.kubernetes.io/proxy-request-buffering: "on"
          path: '/api'
        pod:
          labels:
            deployment: api
            type: api
      # Preprod does not have node-pools so the default node selectors
      # are overridden to default
      websockets:
        hpa:
          minReplicas: 1
        deployment:
          readinessProbe:
            initialDelaySeconds: 0
          terminationGracePeriodSeconds: 30
        nodeSelector:
          type: default
      git:
        hpa:
          minReplicas: 1
        nodeSelector:
          type: default
    workerProcesses: 2
    workhorse:
      resources:
        limits:
          memory: 1G
        requests:
          cpu: 100m
          memory: 50M
    resources:
      limits:
        memory: 3.0G
      requests:
        cpu: 1
        memory: 1.25G
    extraEnv:
      DISABLE_PUMA_NAKAYOSHI_FORK: "true"
  gitlab-shell:
    hpa:
      minReplicas: 1
    workhorse:
      # This is the internal API endpoint for GitLab Shell
      # Currently we are using the same deployments that is
      # used for https Git. Once we have a dedicated API deployment
      # we may want to use that instead
      # https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/1401
      # This should move to values.yaml.gotmp once
      # https://gitlab.com/gitlab-com/gl-infra/production/-/issues/3155 is complete
      host: gitlab-webservice-git.gitlab.svc
    nodeSelector:
      type: default
  mailroom:
    nodeSelector:
      type: default
  sidekiq:
    pods:
        # This is set to "memory-bound" until
        # catchall is migrated to production.
        # The reason for this is because we derive
        # the image version from the memory-bound deployment
      - name: memory-bound
        common:
          labels:
            shard: memory-bound
        nodeSelector:
          type: default
        concurrency: 25
        minReplicas: 1
        maxReplicas: 10
  kas:
    image:
      tag: v13.11.1
    hpa:
      minReplicas: 1
    nodeSelector:
      type: default
global:
  appConfig:
    incomingEmail:
      enabled: true
    omniauth:
      providers:
        - secret: gitlab-google-oauth2-v1
  email:
    reply_to: noreply@gitlab.com

  hosts:
    gitlab:
      name: pre.gitlab.com
    kas:
      name: kas.pre.gitlab.com

  smtp:
    enabled: true
    password:
      key: secret
      secret: gitlab-smtp-credential-v1
