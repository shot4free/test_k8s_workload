# Default values for gitlab/gitlab chart

## NOTICE
# Due to the scope and complexity of this chart, all possible values are
# not documented in this file. Extensive documentation for these values
# and more can be found at https://gitlab.com/charts/gitlab/

## Advanced Configuration
# Documentation for advanced configuration can be found under doc/advanced
# - external PostgreSQL
# - external Gitaly
# - external Redis
# - external NGINX
# - PersistentVolume configuration
# - external Object Storage providers

## The global properties are used to configure multiple charts at once.
## Extended documenation at doc/charts/globals.md
global:
  ## GitLab operator is Alpha. Not for production use.
  operator:
    enabled: false

  ## doc/installation/deployment.md#deploy-the-community-edition
  # edition: ee

  ## doc/charts/globals.md#gitlab-version
  # gitlabVersion: master

  ## doc/charts/globals.md#application-resource
  application:
    create: false
    links: []
    allowClusterRoles: true
  ## doc/charts/globals.md#configure-host-settings
  hosts:
    # hostSuffix:
    https: true
    ssh: ~
    gitlab:
      https: true
    registry:
      https: true

  ## doc/charts/globals.md#configure-ingress-settings
  ingress:
    configureCertmanager: false
    annotations: {}
    enabled: false
    tls:
      enabled: true

  ## Initial root password for this GitLab installation
  ## Secret created according to doc/installation/secrets.md#initial-root-password
  ## If allowing shared-secrets generation, this is OPTIONAL.
  initialRootPassword: {}
    # secret: RELEASE-gitlab-initial-root-password
    # key: password

  ## doc/charts/globals.md#configure-postgresql-settings
  psql:
    password:
      secret: gitlab-postgres-credential-v1
      key: secret
    # host: postgresql.hostedsomewhere.else
    # port: 123
    # username: gitlab
    # database: gitlabhq_production

  ## doc/charts/globals.md#configure-redis-settings
  redis:
    password:
      enabled: true
      secret: gitlab-redis-credential-v1
      key: secret
    # host: redis.hostedsomewhere.else
    # port: 6379

  ## doc/charts/globals.md#configure-gitaly-settings
  gitaly:
    enabled: false
    authToken:
      secret: gitlab-gitaly-credential-v1
      key: secret
    internal:
      names: []
    external: []

  ## doc/charts/globals.md#configure-minio-settings
  minio:
    enabled: false
    credentials: {}
      # secret:

  ## doc/charts/globals.md#configure-appconfig-settings
  ## Rails based portions of this chart share many settings
  appConfig:
    ## doc/charts/globals.md#general-application-settings
    enableUsagePing:
    enableImpersonation:
    defaultCanCreateGroup: true
    usernameChangingEnabled: true
    issueClosingPattern:
    defaultTheme:
    defaultProjectsFeatures:
      issues:
      mergeRequests:
      wiki:
      snippets:
      builds:
    webhookTimeout: 3

    ## doc/charts/globals.md#cron-jobs-related-settings
    cron_jobs:
      stuck_ci_jobs_worker:
        cron: "0 * * * *"
      pipeline_schedule_worker:
        cron: "*/5 * * * *"
      expire_build_artifacts_worker:
        cron: "50 * * * *"
      repository_check_worker:
        cron: "20 * * * *"
      admin_email_worker:
        cron: "0 0 * * 0"
      repository_archive_cache_worker:
        cron: "30 * * * *"
      pages_domain_verification_cron_worker:
        cron: "*/15 * * * *"
      pseudonymizer_worker:
        cron: "0 23 * * *"
      schedule_migrate_external_diffs_worker:
        cron: "15 * * * *"

    ## doc/charts/globals.md#gravatarlibravatar-settings
    gravatar:
      plainUrl:
      sslUrl:

    ## doc/charts/globals.md#hooking-analytics-services-to-the-gitlab-instance
    extra:
      googleAnalyticsId:
      piwikUrl:
      piwikSiteId:

    ## doc/charts/globals.md#lfs-artifacts-uploads-packages-external-mr-diffs
    lfs:
      enabled: false
      proxy_download: true
      connection:
        secret: gitlab-object-storage-v1
        key: gitlab-object-storage.yml
    artifacts:
      enabled: false
      proxy_download: false
      connection:
        secret: gitlab-object-storage-v1
        key: gitlab-object-storage.yml
    uploads:
      enabled: false
      proxy_download: true
      connection:
        secret: gitlab-object-storage-v1
        key: gitlab-object-storage.yml
    packages:
      enabled: false
      proxy_download: true
      connection:
        secret: gitlab-object-storage-v1
        key: gitlab-object-storage.yml
    externalDiffs:
      enabled: false
      proxy_download: true
      bucket: gitlab-mr-diffs
      connection:
        secret: gitlab-object-storage-v1
        key: gitlab-object-storage.yml
    terraformState:
      enabled: false
      bucket: gitlab-terraform-state
      connection:
        secret: gitlab-object-storage-v1
        key: gitlab-object-storage.yml

    ## doc/charts/globals.md#pseudonymizer-settings
    pseudonymizer:
      configMap:
      bucket: ''
      connection: {}
        # secret:
        # key:
    backups:
      bucket: ''
      tmpBucket: tmp

    ## doc/charts/globals.md#incoming-email-settings
    ## doc/installation/deployment.md#incoming-email
    incomingEmail:
      enabled: false
      address: ""
      host: "imap.gmail.com"
      port: 993
      ssl: true
      startTls: false
      user: ""
      password:
        secret: gitlab-mailroom-imap-v1
        key: password
      expungeDeleted: true
      mailbox: inbox
      idleTimeout: 60

    ## doc/charts/globals.md#ldap
    ldap:
      servers: {}
      ## 'main' is the GitLab 'provider ID' of this LDAP server
      # main:
      #   label: 'LDAP'
      #   host: '_your_ldap_server'
      #   port: 636
      #   uid: 'sAMAccountName'
      #   bind_dn: '_the_full_dn_of_the_user_you_will_bind_with'
      #   password:
      #     secret: _the_secret_containing_your_ldap_password
      #     key: _the_key_which_holds_your_ldap_password
      #   encryption: 'plain'

    ## doc/charts/globals.md#omniauth
    omniauth:
      enabled: false
      autoSignInWithProvider:
      syncProfileFromProvider: []
      syncProfileAttributes: ['email']
      allowSingleSignOn: true
      blockAutoCreatedUsers: true
      autoLinkLdapUser: false
      autoLinkSamlUser: false
      externalProviders: []
      providers: []
      # - secret: gitlab-google-oauth2
      #   key: provider
  ## End of global.appConfig

  ## doc/charts/globals.md#configure-gitlab-shell-settings
  shell:
    authToken: {}
      # secret:
      # key:
    hostKeys: {}
      # secret:

  ## Rails application secrets
  ## Secret created according to doc/installation/secrets.md#gitlab-rails-secret
  ## If allowing shared-secrets generation, this is OPTIONAL.
  railsSecrets:
    secret: gitlab-rails-secret-v1

  ## doc/charts/globals.md#configure-registry-settings
  registry:
    authEndPoint: {{ env "GITLAB_ENDPOINT" | default (.Environment.Values | getOrNil "gitlab_endpoint") }}
    certificate:
      secret: registry-certificate-v1
    httpSecret:
      secret: registry-httpsecret-v1

  ## GitLab Runner
  ## Secret created according to doc/installation/secrets.md#gitlab-runner-secret
  ## If allowing shared-secrets generation, this is OPTIONAL.
  runner:
    registrationToken: {}
      # secret:

  ## doc/installation/deployment.md#outgoing-email
  ## Outgoing email server settings
  smtp:
    enabled: false
    address: smtp.mailgun.org
    port: 2525
    user_name: ""
    ## doc/installation/secrets.md#smtp-password
    password:
      secret: ""
      key: password
    # domain:
    authentication: "plain"
    starttls_auto: false
    openssl_verify_mode: "peer"

  ## doc/installation/deployment.md#outgoing-email
  ## Email persona used in email sent by GitLab
  email:
    from: ''
    display_name: GitLab
    reply_to: ''
    subject_suffix: ''

  ## Timezone for containers.
  time_zone:

  ## Global Service Annotations
  service:
    annotations: {}

  antiAffinity: soft

  ## doc/installation/secrets.md#gitlab-workhorse-secret
  workhorse:
    secret: gitlab-workhorse-credential-v1
    key: secret

  ## doc/charts/globals.md#custom-certificate-authorities
  # configuration of certificates container & custom CA injection
  certificates:
    image:
      repository: registry.gitlab.com/gitlab-org/build/cng/alpine-certificates
      tag: 20171114-r3
    customCAs: []
    # - secret: custom-CA
    # - secret: more-custom-CAs
## End of global

## Settings to for the Let's Encrypt ACME Issuer
# certmanager-issuer:
  ## The email address to register certificates requested from Let's Encrypt.
  ## Required if using Let's Encrypt.

## Installation & configuration of stable/cert-manager
## See requirements.yaml for current version
certmanager:
  # Install cert-manager chart. Set to false if you already have cert-manager
  # installed or if you are not using cert-manager.
  install: false
  # Other cert-manager configurations from upstream
  # See https://github.com/kubernetes/charts/tree/master/stable/cert-manager#configuration
  rbac:
    create: true

## doc/charts/nginx/index.md
## doc/architecture/decisions.md#nginx-ingress
## Installation & configuration of charts/nginx
nginx-ingress:
  enabled: false
  tcpExternalConfig: "true"
  controller:
    config:
      hsts-include-subdomains: "false"
      server-name-hash-bucket-size: "256"
      enable-vts-status: "true"
      use-http2: "false"
      ssl-ciphers: "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4"
      ssl-protocols: "TLSv1.1 TLSv1.2"
      server-tokens: "false"
    extraArgs:
      force-namespace-isolation: ""
    service:
      externalTrafficPolicy: "Local"
      omitClusterIP: true
    resources:
      requests:
        cpu: 100m
        memory: 100Mi
    publishService:
      enabled: true
    replicaCount: 3
    minAvailable: 2
    scope:
      enabled: true
    stats:
      enabled: true
      service:
        omitClusterIP: true
    metrics:
      enabled: true
      service:
        annotations:
          prometheus.io/scrape: "true"
          prometheus.io/port: "10254"
        omitClusterIP: true
  defaultBackend:
    minAvailable: 1
    replicaCount: 2
    resources:
      requests:
        cpu: 5m
        memory: 5Mi
    service:
      omitClusterIP: true
  rbac:
    create: true
  serviceAccount:
    create: true

## Installation & configuration of stable/prometheus
## See requirements.yaml for current version
prometheus:
  install: false
  rbac:
    create: true
  alertmanager:
    enabled: false
  alertmanagerFiles:
    alertmanager.yml: {}
  kubeStateMetrics:
    enabled: false
  nodeExporter:
    enabled: false
  pushgateway:
    enabled: false

## Configuration of Redis
## doc/architecture/decisions.md#redis
## doc/charts/redis
redis:
  install: false

## Instllation & configuration of stable/prostgresql
## See requirements.yaml for current version
postgresql:
  install: false
  postgresUser: gitlab
  postgresDatabase: gitlabhq_production
  imageTag: 9.6.8
  usePasswordFile: true
  existingSecret: 'secret'
  metrics:
    enabled: true
    ## Optionally define additional custom metrics
    ## ref: https://github.com/wrouesnel/postgres_exporter#adding-new-metrics-via-a-config-file

## Installation & configuration charts/registry
## doc/architecture/decisions.md#registry
## doc/charts/registry/
registry:
  nodeSelector:
    type: default
  image:
    repository: dev.gitlab.org:5005/gitlab/charts/components/images/gitlab-container-registry
    pullSecrets:
    - name: dev-registry-access-v1
  hpa:
    cpu:
      targetAverageUtilization: 80
  draintimeout: '60s'
  enabled: true
  deployment:
    readinessProbe:
      path: /debug/health
      port: 5001
      # TODO: Consider removal after https://gitlab.com/gitlab-org/container-registry/issues/37
      initialDelaySeconds: 40
    livenessProbe:
      path: /debug/health
      port: 5001
  networkpolicy:
    enabled: true
    egress:
      enabled: true
      # The following rules enable traffic to all external
      # endpoints, except the metadata service and the local
      # network (except DNS requests)
      rules:
      - to:
        - ipBlock:
            cidr: 10.0.0.0/8
        ports:
        - port: 53
          protocol: UDP
      - to:
        - ipBlock:
            cidr: 0.0.0.0/0
            except:
            - 10.0.0.0/8
            - 169.254.169.254/32
  resources:
    limits:
      memory: 4G
  debug:
    addr:
      port: 5001
    prometheus:
      enabled: true
      path: '/metrics'
  ingress:
    enabled: false
  log:
    formatter: json
  service:
    type: LoadBalancer
    annotations:
      cloud.google.com/load-balancer-type: Internal
  storage:
    secret: registry-storage-v1
    key: config
    extraKey: gcs.json
  tokenIssuer: omnibus-gitlab-issuer
  health:
    storagedriver:
      enabled: true
      interval: '10s'
      threshold: 3

## Automatic shared secret generation
## doc/installation/secrets.md
## doc/charts/shared-secrets
shared-secrets:
  enabled: false
  rbac:
    create: true

## Installation & configuration of gitlab/gitlab-runner
## See requirements.yaml for current version
gitlab-runner:
  install: false
  rbac:
    create: true
  runners:
    locked: false
    cache:
      cacheType: s3
      s3BucketName: runner-cache
      cacheShared: true
      s3BucketLocation: us-east-1
      s3CachePath: gitlab-runner
      s3CacheInsecure: false

## Settings for individual sub-charts under GitLab
## Note: Many of these settings are configurable via globals
gitlab:
  # doc/charts/gitlab/migrations
  migrations:
    enabled: false
  # doc/charts/gitlab/unicorn
  webservice:
    enabled: false
  # doc/charts/gitlab/sidekiq
  sidekiq:
    cluster: true
    experimentalQueueSelector: true
    nodeSelector:
      type: sidekiq
    image:
      repository: dev.gitlab.org:5005/gitlab/charts/components/images/gitlab-sidekiq-ee

{{/*

Here a query is made to determine the running version of the image being
utilized by sidekiq for the sidekiq project-exporter queue.
It is possible to set a new version by setting $GITLAB_IMAGE_TAG
in the environment.

If GITLAB_IMAGE_TAG is not set, this will fall back to what is currently in the cluster.

This is being done now for normal deploys until deployments switch to using a helm chart release.
This is being tracked in issue https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/697

*/}}

{{- $sidekiq_deployment := "gitlab-sidekiq-memory-bound-v1" }}

{{- $namespace := .Environment.Values | getOrNil "gitlab_namespace" | default "gitlab"}}
{{- $sidekiq_current_spec := exec "kubectl" (list "get" "deployment" $sidekiq_deployment "--namespace" $namespace "-o" "json") }}
{{- $sidekiq_current_tag := ($sidekiq_current_spec | exec "jq"  (list ".spec.template.spec.containers[] | select(.name == \"sidekiq\") | .image | split(\":\") | .[2]")) }}
{{- $provided_image_tag := env "GITLAB_IMAGE_TAG" }}

      tag: {{ default $sidekiq_current_tag $provided_image_tag }}
      pullSecrets:
      - name: dev-registry-access-v1
    enabled: true
    metrics:
      enabled: true
      port: 8083
    logging:
      format: "json"
    extraEnv:
      # This will enables logs for sidekiq args
      # and does not yet have explicit support in
      # the GitLab chart
      # https://gitlab.com/gitlab-org/charts/gitlab/-/issues/2100
      SIDEKIQ_LOG_ARGUMENTS: "1"
      BYPASS_SCHEMA_VERSION: "true"
    networkpolicy:
      enabled: true
      egress:
        enabled: true
        # The following rules enable traffic to all external
        # endpoints, except the metadata service and the local
        # network (except DNS, gitaly, redis and postgres)
        rules:
          # Allow all traffic except internal network and metadata service
        - to:
          - ipBlock:
              cidr: 0.0.0.0/0
              except:
              - 10.0.0.0/8
              - 169.254.169.254/32
          # Allow internal traffic for DNS
        - to:
          - ipBlock:
              cidr: 10.0.0.0/8
          ports:
          - port: 53
            protocol: UDP

          # Allow internal traffic to Redis
        - to:
          - ipBlock:
              cidr: 10.0.0.0/8
          ports:
            # pre Memorystore instance
          - port: 6379
            protocol: TCP
            # gstg, gprd Redis
          - port: 26379
            protocol: TCP

          # Allow internal traffic to Postgresql
        - to:
          - ipBlock:
              cidr: 10.0.0.0/8
          ports:
            # pre CloudSQL
          - port: 5432
            protocol: TCP
            # gstg, gprd pgbouncer
          - port: 6432
            protocol: TCP

          # Allow internal traffic to Gitaly
        - to:
          - ipBlock:
              cidr: 10.0.0.0/8
          ports:
          - port: 9999
            protocol: TCP

    pods:
      - name: memory-bound
        concurrency: 1
        minReplicas: 1
        maxReplicas: 16
        nodeSelector:
          type: memory-bound
        queues: resource_boundary=memory
        resources:
          requests:
            cpu: 50m
            memory: 650M
          limits:
            cpu: 2
            memory: 8G
      - name: elasticsearch
        concurrency: 2
        minReplicas: 2
        maxReplicas: 2
        nodeSelector:
          type: default
        queues: feature_category=global_search&urgency=throttled
        resources:
          requests:
            cpu: 50m
            memory: 650M
          limits:
            cpu: 2
            memory: 8G
      - name: low-urgency-cpu-bound
        concurrency: 5
        minReplicas: 2
        maxReplicas: 10
        nodeSelector:
          type: low-urgency-cpu-bound
        queues: resource_boundary=cpu&urgency=default,low
        resources:
          requests:
            cpu: 50m
            memory: 650M
          limits:
            cpu: 2
            memory: 8G
      - name: urgent-other
        concurrency: 5
        minReplicas: 5
        maxReplicas: 10
        nodeSelector:
          type: urgent-other
        queues: resource_boundary!=cpu&urgency=high
        resources:
          requests:
            cpu: 50m
            memory: 650M
          limits:
            cpu: 2
            memory: 8G

    registry:
      tokenIssuer: omnibus-gitlab-issuer
    trusted_proxies:
      - 10.0.0.0/8
    extraVolumeMounts: |
      - name: sidekiq-shared
        mountPath: /srv/gitlab/shared
        readOnly: false
    extraVolumes: |
      - name: sidekiq-shared
        emptyDir:
          sizeLimit: 50G
  # doc/charts/gitlab/gitlab-shell
  gitlab-shell:
    enabled: false
  task-runner:
    enabled: false
  gitlab-monitor:
    enabled: false
  gitlab-exporter:
    enabled: false
  mailroom:
    nodeSelector:
      type: default
    enabled: false
    image:
      repository: dev.gitlab.org:5005/gitlab/charts/components/images/gitlab-mailroom
      # Pin the tag to avoid following the chart default
      # https://gitlab.com/groups/gitlab-com/gl-infra/-/epics/201
      tag: 0.0.4
      pullSecrets:
        - name: dev-registry-access-v1
    networkpolicy:
      enabled: true
      egress:
        enabled: true
        rules:
          # Allow DNS
          - to:
              - ipBlock:
                  cidr: 10.0.0.0/8
            ports:
              - port: 53
                protocol: UDP

          # Allow IMAP
          - to:
              - ipBlock:
                  cidr: 0.0.0.0/0
                  except:
                    - 10.0.0.0/8
            ports:
              - port: 993
                protocol: TCP

          # Allow Redis
          - to:
              - ipBlock:
                  cidr: 10.0.0.0/8
            ports:
              # pre Memorystore instance
              - port: 6379
                protocol: TCP

              # gstg, gprd
              - port: 26379
                protocol: TCP
