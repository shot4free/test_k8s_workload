---

# Please note that `gprd.yaml.gotmpl` is included first for the `gprd-cny` environment,
# this file is for `cny` specific overrides

nginx-ingress:
  enabled: true
  controller:
    autoscaling:
      minReplicas: 3

gitlab:
  mailroom:
    enabled: false

  sidekiq:
    enabled: false
  webservice:
    deployments:
      api:
        common:
          labels:
            type: api
        extraEnv:
          GITLAB_CONTINUOUS_PROFILING: stackdriver?service=workhorse-api
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"api\", \"stage\": \"cny\"}"
        nodeSelector:
          type: api
        service:
          # Note that we are creating a loadbalancer, but not yet using it,
          # This will come to use in issue: https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/1557
          loadBalancerIP: {{ exec "gcloud" (list "--project" .Environment.Values.google_project "compute" "addresses" "list" "--filter" (printf "name=api-gke-%s" .Environment.Name) "--format" "value(address)" "--verbosity" "error") }}
          type: LoadBalancer
          loadBalancerSourceRanges:
            - 10.0.0.0/8
          annotations:
            cloud.google.com/load-balancer-type: Internal
        shutdown:
          blackoutSeconds: 10
        deployment:
          terminationGracePeriodSeconds: 15
        maxUnavailable: 0
        ingress:
          annotations:
            nginx.ingress.kubernetes.io/proxy-buffering: "on"
            nginx.ingress.kubernetes.io/proxy-buffers-number: "8"
            nginx.ingress.kubernetes.io/proxy-max-temp-file-size: "0"
            nginx.ingress.kubernetes.io/server-snippet: |
              location ~ (/api/v\d/jobs/\d+/artifacts$|\.git/git-receive-pack$|\.git/gitlab-lfs/objects|\.git/info/lfs/objects/batch$) {
                set $namespace      "gitlab-cny";
                set $ingress_name   "gitlab-cny-webservice-api";
                set $service_name   "gitlab-cny-webservice-api";
                set $service_port   "8181";
                set $location_path  "/api";
                rewrite_by_lua_block {
                  lua_ingress.rewrite({
                    force_ssl_redirect = false,
                    ssl_redirect = true,
                    force_no_ssl_redirect = false,
                    use_port_in_redirects = false,
                  })
                  balancer.rewrite()
                  plugins.run()
                }
                header_filter_by_lua_block {
                  lua_ingress.header()
                  plugins.run()
                }
                body_filter_by_lua_block {
                }
                log_by_lua_block {
                  balancer.log()
                  monitor.call()
                  plugins.run()
                }
                port_in_redirect off;
                set $balancer_ewma_score -1;
                set $proxy_upstream_name "gitlab-cny-gitlab-cny-webservice-api-8181";
                set $proxy_host          $proxy_upstream_name;
                set $pass_access_scheme  $scheme;
                set $pass_server_port    $server_port;
                set $best_http_host      $http_host;
                set $pass_port           $pass_server_port;
                set $proxy_alternative_upstream_name "";
                client_max_body_size                    0;
                proxy_set_header Host                   $best_http_host;
                proxy_set_header                        Upgrade           $http_upgrade;
                proxy_set_header                        Connection        $connection_upgrade;
                proxy_set_header X-Request-ID           $req_id;
                proxy_set_header X-Real-IP              $remote_addr;
                proxy_set_header X-Forwarded-For        $full_x_forwarded_for;
                proxy_set_header X-Forwarded-Host       $best_http_host;
                proxy_set_header X-Forwarded-Port       $pass_port;
                proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
                proxy_set_header X-Scheme               $pass_access_scheme;
                proxy_set_header X-Original-Forwarded-For $http_x_forwarded_for;
                proxy_set_header Proxy                  "";
                proxy_connect_timeout                   300s;
                proxy_send_timeout                      60s;
                proxy_read_timeout                      3600s;
                proxy_buffering                         on;
                proxy_buffer_size                       4k;
                proxy_buffers                           8 4k;
                proxy_max_temp_file_size                0;
                proxy_request_buffering                 off;
                proxy_http_version                      1.1;
                proxy_cookie_domain                     off;
                proxy_cookie_path                       off;
                proxy_next_upstream                     error timeout;
                proxy_next_upstream_timeout             0;
                proxy_next_upstream_tries               3;
                proxy_cache                             off;
                proxy_pass                              http://upstream_balancer;
                proxy_redirect                          off;
              }
          path: '/api'
        pod:
          labels:
            deployment: api
            type: api
      websockets:
        hpa:
          minReplicas: 1
        extraEnv:
          GITLAB_CONTINUOUS_PROFILING: stackdriver?service=workhorse-websockets
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"websockets\", \"stage\": \"cny\"}"
          GODEBUG: madvdontneed=1
      git:
        extraEnv:
          GITLAB_CONTINUOUS_PROFILING: stackdriver?service=workhorse-git
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"git\", \"stage\": \"cny\"}"
    minReplicas: 5
    extraEnv:
      GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"git\", \"stage\": \"cny\"}"
      DISABLE_PUMA_NAKAYOSHI_FORK: "true"
      GITLAB_TEMPFILE_IMMEDIATE_UNLINK: '1'

registry:
  hpa:
    minReplicas: 5
