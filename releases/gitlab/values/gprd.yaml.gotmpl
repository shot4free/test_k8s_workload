---

nginx-ingress:
  enabled: true
  controller:
    autoscaling:
      minReplicas: 10
    resources:
      requests:
        cpu: 1
        memory: 1G

registry:
  hpa:
    # min is set higher until we have more control over the HPA
    # in https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/1510
    minReplicas: 30
    maxReplicas: 150
  nodeSelector:
    type: registry
  resources:
    requests:
      cpu: 250m
      memory: 3G

gitlab:
  gitlab-shell:
    minReplicas: 8
    maxReplicas: 150
  webservice:
    deployments:
      api:
        hpa:
          minReplicas: 30
          targetAverageValue: 2600m
        workhorse:
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 600m
              memory: 300M
        resources:
          limits:
            memory: 8.0G
          requests:
            cpu: 4
            memory: 7G
      websockets:
        hpa:
          minReplicas: 2
        workhorse:
          # these limits are increased due to memory consumption observed when we
          # turned on ActionCable https://gitlab.com/gitlab-com/gl-infra/production/-/issues/3413
          resources:
            limits:
              memory: 4G
            requests:
              memory: 1G
    minReplicas: 30
    maxReplicas: 150
    extraEnv:
      ENABLE_ACTIVERECORD_EMPTY_PING: "true"
      GITLAB_THROTTLE_BYPASS_HEADER: "X-GitLab-RateLimit-Bypass"
      DISABLE_PUMA_NAKAYOSHI_FORK: "true"
      GITLAB_SIDEKIQ_SIZE_LIMITER_MODE: track
      GITLAB_SIDEKIQ_SIZE_LIMITER_LIMIT_BYTES: 100000
      GITLAB_CDN_HOST: https://assets.gitlab-static.net
  kas:
    workhorse:
      scheme: 'https'
      host: 'int.gprd.gitlab.net'
      port: 443
    customConfig:
      observability:
        sentry:
          dsn: https://af4940ad841b46d78708595fc654af78@sentry.gitlab.net/124
          environment: {{ .Environment.Values | getOrNil "env_prefix" }}
  sidekiq:
    extraEnv:
      SIDEKIQ_SEMI_RELIABLE_FETCH_TIMEOUT: 5
      ENABLE_ACTIVERECORD_EMPTY_PING: "true"
      GITLAB_SIDEKIQ_SIZE_LIMITER_MODE: track
      GITLAB_SIDEKIQ_SIZE_LIMITER_LIMIT_BYTES: 100000
    extraInitContainers: |
      - name: write-instance-name
        args:
          - -c
          - echo "$INSTANCE_NAME" > /etc/gitlab/instance_name
        command:
          - sh
        env:
          - name: INSTANCE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        image: 'busybox:latest'
        volumeMounts:
          - mountPath: /etc/gitlab
            name: sidekiq-secrets
    psql:
      prepared_statements: false
      load_balancing:
        discover:
          nameserver: <%= File.read('/etc/gitlab/instance_name').strip %>
          record: db-replica.service.consul.
          record_type: SRV
          port: 8600
          use_tcp: true
    pods:
      - name: catchall
        common:
          labels:
            shard: catchall
        concurrency: 15
        minReplicas: 56
        maxReplicas: 175
        nodeSelector:
          type: catchall
        podLabels:
          shard: catchall
          deployment: sidekiq-catchall
        negateQueues: |
          resource_boundary=cpu&urgency=high&tags!=requires_disk_io|resource_boundary=memory|feature_category=global_search&urgency=throttled|resource_boundary!=cpu&urgency=high|resource_boundary=cpu&urgency=default,low|feature_category=database&urgency=throttled|feature_category=gitaly&urgency=throttled|tags=exclude_from_kubernetes,exclude_from_gitlab_com
        resources:
          requests:
            cpu: 800m
            memory: 1.7G
          limits:
            cpu: 1.5
            memory: 2.5G
        extraEnv:
          ENABLE_LOAD_BALANCING_FOR_SIDEKIQ: "true"
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"catchall\"}"
        extraVolumes: |
          # This is needed because of https://gitlab.com/gitlab-org/gitlab/-/issues/330317
          # where temp files are written to `/srv/gitlab/shared`
          - name: sidekiq-shared
            emptyDir:
              sizeLimit: 10G
      - name: memory-bound
        common:
          labels:
            shard: memory-bound
        concurrency: 1
        minReplicas: 4
        maxReplicas: 16
        nodeSelector:
          type: memory-bound
        podLabels:
          shard: memory-bound
          deployment: sidekiq-memory-bound
        queues: resource_boundary=memory
        resources:
          requests:
            cpu: 50m
            memory: 650M
          limits:
            cpu: 2
            memory: 8G
        extraVolumeMounts: |
          - name: sidekiq-shared
            mountPath: /srv/gitlab/shared
            readOnly: false
        extraVolumes: |
          - name: sidekiq-shared
            emptyDir:
              sizeLimit: 70G
        extraEnv:
          ENABLE_LOAD_BALANCING_FOR_SIDEKIQ: "true"
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"memory-bound\"}"
      # Run background migrations in their own shard
      - name: database-throttled
        common:
          labels:
            shard: database-throttled
        concurrency: 5 # Discussion on this value in https://gitlab.com/gitlab-com/gl-infra/k8s-workloads/gitlab-com/-/merge_requests/276/diffs#note_367270352
        minReplicas: 1
        maxReplicas: 1
        nodeSelector:
          type: default
        podLabels:
          shard: database-throttled
          deployment: sidekiq-database-throttled
        queues: feature_category=database&urgency=throttled
        resources:
          requests:
            cpu: 50m
            memory: 650M
          limits:
            cpu: 1.5
            memory: 6G
        extraEnv:
          ENABLE_LOAD_BALANCING_FOR_SIDEKIQ: "true"
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"database-throttled\"}"
      # Run Gitaly Storage Migrations on their own shards
      # https://gitlab.com/gitlab-com/gl-infra/scalability/-/issues/436
      # Allow up to a maximum of 24 concurrent gitaly-throttled jobs
      - name: gitaly-throttled
        common:
          labels:
            shard: gitaly-throttled
        concurrency: 8
        minReplicas: 1
        maxReplicas: 3
        nodeSelector:
          type: default
        podLabels:
          shard: gitaly-throttled
          deployment: sidekiq-gitaly-throttled
        queues: feature_category=gitaly&urgency=throttled
        resources:
          requests:
            cpu: 50m
            memory: 650M
          limits:
            cpu: 1.5
            memory: 6G
        extraEnv:
          ENABLE_LOAD_BALANCING_FOR_SIDEKIQ: "true"
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"gitaly-throttled\"}"
      - name: elasticsearch
        common:
          labels:
            shard: elasticsearch
        concurrency: 2
        minReplicas: 2
        maxReplicas: 8
        nodeSelector:
          type: default
        podLabels:
          shard: elasticsearch
          deployment: sidekiq-elasticsearch
        queues: feature_category=global_search&urgency=throttled
        resources:
          requests:
            cpu: 50m
            memory: 650M
          limits:
            cpu: 2
            memory: 8G
        extraEnv:
          ENABLE_LOAD_BALANCING_FOR_SIDEKIQ: "true"
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"elasticsearch\"}"
      # Production resources for this shard discussed in
      # https://gitlab.com/gitlab-com/gl-infra/infrastructure/-/issues/10445
      # https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/901
      - name: low-urgency-cpu-bound
        common:
          labels:
            shard: low-urgency-cpu-bound
        concurrency: 5
        minReplicas: 10
        maxReplicas: 100
        nodeSelector:
          type: low-urgency-cpu-bound
        podLabels:
          shard: low-urgency-cpu-bound
          deployment: sidekiq-low-urgency-cpu-bound
        queues: resource_boundary=cpu&urgency=default,low
        resources:
          requests:
            cpu: 80m
            memory: 5G
          limits:
            cpu: 1.5
            memory: 6G
        extraEnv:
          ENABLE_LOAD_BALANCING_FOR_SIDEKIQ: "true"
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"low-urgency-cpu-bound\"}"
      # Production resources for urgent-cpu-bound discussed in
      # https://gitlab.com/gitlab-com/gl-infra/infrastructure/-/issues/10639
      - name: urgent-cpu-bound
        common:
          labels:
            shard: urgent-cpu-bound
        concurrency: 5
        hpa:
          targetAverageValue: 300m
        minReplicas: 30
        maxReplicas: 105
        memoryKiller:
          checkInterval: 3
          graceTime: 900
          maxRss: 3000000
          shutdownWait: 30
        nodeSelector:
          type: urgent-cpu-bound
        podLabels:
          shard: urgent-cpu-bound
          deployment: sidekiq-urgent-cpu-bound
        queues: resource_boundary=cpu&urgency=high&tags!=requires_disk_io
        resources:
          requests:
            cpu: 588m
            memory: 800M
          limits:
            cpu: 2
            memory: 3.1G
        extraEnv:
          ENABLE_LOAD_BALANCING_FOR_SIDEKIQ: "true"
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"urgent-cpu-bound\"}"
      # Production resources for this shard discussed in
      # https://gitlab.com/gitlab-com/gl-infra/infrastructure/-/issues/10446
      - name: urgent-other
        common:
          labels:
            shard: urgent-other
        concurrency: 5
        minReplicas: 175
        maxReplicas: 175
        memoryKiller:
          checkInterval: 3
          graceTime: 900
          maxRss: 2900000
          shutdownWait: 30
        nodeSelector:
          type: urgent-other
        podLabels:
          shard: urgent-other
          deployment: sidekiq-urgent-other
        queues: resource_boundary!=cpu&urgency=high
        resources:
          requests:
            cpu: 300m
            memory: 1.5G
          limits:
            cpu: 1.5
            memory: 3G
        extraEnv:
          ENABLE_LOAD_BALANCING_FOR_SIDEKIQ: "true"
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"urgent-other\"}"

global:
  appConfig:
    incomingEmail:
      enabled: true
    omniauth:
      providers:
        - secret: gitlab-google-oauth2-v1
        - secret: gitlab-twitter-oauth2-v1
        - secret: gitlab-github-oauth2-v1
        - secret: gitlab-bitbucket-oauth2-v1
        - secret: gitlab-group-saml-oauth2-v1
        - secret: gitlab-salesforce-oauth2-v1
  email:
    reply_to: noreply@gitlab.com

  hosts:
    gitlab:
      name: gitlab.com
    kas:
      name: kas.gitlab.com

  psql:
    prepared_statements: false
    load_balancing:
      discover:
        nameserver: <%= File.read('/etc/gitlab/instance_name').strip %>
        record: db-replica.service.consul.
        record_type: SRV
        port: 8600
        use_tcp: true

  smtp:
    enabled: true
    password:
      key: secret
      secret: gitlab-smtp-credential-v1
