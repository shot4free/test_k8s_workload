---

nginx-ingress:
  controller:
    autoscaling:
      minReplicas: 10
    nodeSelector:
      cloud.google.com/gke-nodepool: default-3
    resources:
      requests:
        cpu: 1
        memory: 1G

registry:
  hpa:
    # min is set higher until we have more control over the HPA
    # in https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/1510
    minReplicas: 20
    maxReplicas: 90
  resources:
    requests:
      memory: 3G
  database:
    # This setting should not be disabled (unless we decide to do a full rollback during Phase 1 of the
    # upgrade/migration, in which case we have to first copy the bucket data from the new prefix to the
    # old prefix). Disabling this would cause repositories that were registered on the database to
    # become inaccessible. In case of an issue with the upgrade/migration, we should instead turn off
    # the `container_registry_migration_phase1` feature flag
    # (https://gitlab.com/gitlab-org/gitlab/-/issues/335703), which will pause the addition of _more_
    # repositories to the database while continuing to serve requests for those already there.
    enabled: true
    host: pgbouncer-registry.int.gprd.gitlab.net
    port: 6432
    user: gitlab-registry
    name: gitlabhq_registry
    connecttimeout: 5s
    draintimeout: 15s
    password:
      secret: registry-postgresql-password-v1
    pool:
      maxopen: 30
      maxidle: 15
      maxlifetime: 30m
      maxidletime: 5m
  migration:
    # This setting should not be disabled in case of a rollback. Please see the comments for the
    # `database.enabled` configuration parameter for additional details (the same applies here).
    enabled: true
    rootdirectory: gitlab
  storage:
    secret: registry-storage-v4
  # When enabled, the upload purger will attempt to make deletes against the
  # common GCS bucket. It is not suitable to be enabled in production until the
  # following issues are resolved:
  # https://gitlab.com/gitlab-org/container-registry/-/issues/216
  # https://gitlab.com/gitlab-org/container-registry/-/issues/217
  maintenance:
    uploadpurging:
      enabled: false
  gc:
    disabled: false
  validation:
    disabled: false
    manifests:
      referencelimit: 200
      urls:
        # this is needed to keep backwards compatibility when `validation.disabled: false`, as by default an empty `allow` means no URLs are allowed
        allow:
          - .*

gitlab:
  gitlab-pages:
    hpa:
      minReplicas: 2
      targetAverageValue: 800m
    resources:
      requests:
        cpu: 1000m
        memory: 4G
      limits:
        memory: 6G
  gitlab-shell:
    resources:
      requests:
        cpu: 2000m
    hpa:
      targetAverageValue: 1200m
    minReplicas: 8
    maxReplicas: 150
    nodeSelector:
      cloud.google.com/gke-nodepool: shell-2
  mailroom:
    nodeSelector:
      cloud.google.com/gke-nodepool: default-3
  webservice:
    deployments:
      api:
        hpa:
          minReplicas: 25
          targetAverageValue: 3600m
        workhorse:
          resources:
            limits:
              memory: 2G
            requests:
              cpu: 600m
              memory: 300M
        resources:
          limits:
            memory: 12G
          requests:
            cpu: 4500m
            memory: 7G
      git:
        nodeSelector:
          cloud.google.com/gke-nodepool: git-https-2
      web:
        hpa:
          minReplicas: 25
          maxReplicas: 150
          targetAverageValue: 3000m
        nodeSelector:
          cloud.google.com/gke-nodepool: web-0
        resources:
          limits:
            memory: 12G
          requests:
            cpu: 4500m
            memory: 7G
        workerProcesses: 6
      websockets:
        hpa:
          minReplicas: 2
        nodeSelector:
          cloud.google.com/gke-nodepool: websockets-1
        workhorse:
          # these limits are increased due to memory consumption observed when we
          # turned on ActionCable https://gitlab.com/gitlab-com/gl-infra/production/-/issues/3413
          resources:
            limits:
              memory: 4G
            requests:
              memory: 1G
    minReplicas: 30
    maxReplicas: 150
    extraEnv:
      GITLAB_THROTTLE_BYPASS_HEADER: "X-GitLab-RateLimit-Bypass"
      DISABLE_PUMA_NAKAYOSHI_FORK: "true"
      GITLAB_PERFORMANCE_BAR_STATS_URL: "https://log.gprd.gitlab.net/app/dashboards#/view/823ed530-655a-11eb-a318-db81ec4462fa?_g=(filters%3A!()%2CrefreshInterval%3A(pause%3A!t%2Cvalue%3A0)%2Ctime%3A(from%3Anow-24h%2Cto%3Anow))"
      GITLAB_LOG_DEPRECATIONS: "true"
  kas:
    image:
      tag: v14.5.0
    nodeSelector:
      cloud.google.com/gke-nodepool: default-3
    service:
      # gcloud compute address kas-internal-gke-gprd
      loadBalancerIP: 10.216.8.102
    workhorse:
      scheme: 'https'
      host: 'int.gprd.gitlab.net'
      port: 443
    resources:
      limits:
        memory: 512M
      requests:
        cpu: 100m
        memory: 256M
    customConfig:
      observability:
        sentry:
          dsn: https://af4940ad841b46d78708595fc654af78@sentry.gitlab.net/124
          environment: {{ .Environment.Values | getOrNil "env_prefix" }}
  sidekiq:
    extraEnv:
      SIDEKIQ_SEMI_RELIABLE_FETCH_TIMEOUT: 5
      GITLAB_LOG_DEPRECATIONS: "true"
    extraInitContainers: |
      - name: write-instance-name
        args:
          - -c
          - echo "$INSTANCE_NAME" > /etc/gitlab/instance_name
        command:
          - sh
        env:
          - name: INSTANCE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
        image: 'busybox:latest'
        volumeMounts:
          - mountPath: /etc/gitlab
            name: sidekiq-secrets
    psql:
      host: pgbouncer-sidekiq.int.gprd.gitlab.net
      prepared_statements: false
      load_balancing:
        discover:
          nameserver: <%= File.read('/etc/gitlab/instance_name').strip %>
          record: db-replica.service.consul.
          record_type: SRV
          port: 8600
          use_tcp: true
    pods:
      - name: catchall
        common:
          labels:
            shard: catchall
        hpa:
          targetAverageValue: 600m
        concurrency: 15
        minReplicas: 56
        maxReplicas: 225
        nodeSelector:
          cloud.google.com/gke-nodepool: sidekiq-catchall-2
        podLabels:
          shard: catchall
          deployment: sidekiq-catchall
        queueSelector: false
        queues: default,mailers,project_import_schedule
        resources:
          requests:
            cpu: 800m
            memory: 1.7G
          limits:
            cpu: 1.5
            memory: 2.5G
        extraEnv:
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"catchall\"}"
        extraVolumes: |
          # This is needed because of https://gitlab.com/gitlab-org/gitlab/-/issues/330317
          # where temp files are written to `/srv/gitlab/shared`
          - name: sidekiq-shared
            emptyDir:
              sizeLimit: 10G
      - name: imports
        common:
          labels:
            shard: imports
        concurrency: 1
        minReplicas: 10
        maxReplicas: 10
        nodeSelector:
          cloud.google.com/gke-nodepool: sidekiq-catchall-2
        podLabels:
          deployment: sidekiq-imports
          shard: imports
        queueSelector: false
        queues: imports
        resources:
          requests:
            cpu: 800m
            memory: 2G
          limits:
            cpu: 1.5
            memory: 4G
        extraEnv:
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"imports\"}"
      - name: memory-bound
        common:
          labels:
            shard: memory-bound
        concurrency: 1
        minReplicas: 8
        maxReplicas: 16
        nodeSelector:
          cloud.google.com/gke-nodepool: sidekiq-memory-bound-3
        podLabels:
          shard: memory-bound
          deployment: sidekiq-memory-bound
        queueSelector: false
        queues: memory_bound
        resources:
          requests:
            cpu: 500m
            memory: 3G
          limits:
            cpu: 2
            memory: 8G
        extraVolumeMounts: |
          - name: sidekiq-shared
            mountPath: /srv/gitlab/shared
            readOnly: false
        extraVolumes: |
          - name: sidekiq-shared
            emptyDir:
              sizeLimit: 70G
        extraEnv:
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"memory-bound\"}"
      # Run background migrations in their own shard
      - name: database-throttled
        common:
          labels:
            shard: database-throttled
        concurrency: 5 # Discussion on this value in https://gitlab.com/gitlab-com/gl-infra/k8s-workloads/gitlab-com/-/merge_requests/276/diffs#note_367270352
        minReplicas: 1
        maxReplicas: 1
        nodeSelector:
          cloud.google.com/gke-nodepool: default-3
        podLabels:
          shard: database-throttled
          deployment: sidekiq-database-throttled
        queueSelector: false
        queues: database_throttled
        resources:
          requests:
            cpu: 500m
            memory: 3G
          limits:
            cpu: 1.5
            memory: 8G
        extraEnv:
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"database-throttled\"}"
      # Run Gitaly Storage Migrations on their own shards
      # https://gitlab.com/gitlab-com/gl-infra/scalability/-/issues/436
      # Allow up to a maximum of 24 concurrent gitaly-throttled jobs
      - name: gitaly-throttled
        common:
          labels:
            shard: gitaly-throttled
        concurrency: 8
        minReplicas: 1
        maxReplicas: 3
        nodeSelector:
          cloud.google.com/gke-nodepool: default-3
        podLabels:
          shard: gitaly-throttled
          deployment: sidekiq-gitaly-throttled
        queueSelector: false
        queues: gitaly_throttled
        resources:
          requests:
            cpu: 500m
            memory: 1300M
          limits:
            cpu: 1.5
            memory: 6G
        extraEnv:
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"gitaly-throttled\"}"
      - name: elasticsearch
        common:
          labels:
            shard: elasticsearch
        concurrency: 2
        minReplicas: 2
        maxReplicas: 8
        nodeSelector:
          cloud.google.com/gke-nodepool: default-3
        podLabels:
          shard: elasticsearch
          deployment: sidekiq-elasticsearch
        queueSelector: false
        queues: elasticsearch
        resources:
          requests:
            cpu: 800m
            memory: 2G
          limits:
            cpu: 2
            memory: 8G
        extraEnv:
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"elasticsearch\"}"
      # Production resources for this shard discussed in
      # https://gitlab.com/gitlab-com/gl-infra/infrastructure/-/issues/10445
      # https://gitlab.com/gitlab-com/gl-infra/delivery/-/issues/901
      - name: low-urgency-cpu-bound
        common:
          labels:
            shard: low-urgency-cpu-bound
        concurrency: 5
        minReplicas: 10
        maxReplicas: 100
        nodeSelector:
          cloud.google.com/gke-nodepool: sidekiq-low-urgency-cpu-bound-2
        podLabels:
          shard: low-urgency-cpu-bound
          deployment: sidekiq-low-urgency-cpu-bound
        queueSelector: false
        queues: low_urgency_cpu_bound
        resources:
          requests:
            cpu: 1
            memory: 5G
          limits:
            cpu: 1.5
            memory: 6G
        extraEnv:
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"low-urgency-cpu-bound\"}"
      # This is a shard that segregates seemingly problematic queues
      - name: quarantine
        common:
          labels:
            shard: quarantine
        concurrency: 15
        minReplicas: 10
        maxReplicas: 50
        nodeSelector:
          cloud.google.com/gke-nodepool: sidekiq-catchall-2
        podLabels:
          shard: quarantine
          deployment: sidekiq-quarantine
        queueSelector: false
        queues: quarantine
        resources:
          requests:
            cpu: 800m
            memory: 1.7G
          limits:
            cpu: 1.5
            memory: 2.5G
        extraEnv:
          ENABLE_LOAD_BALANCING_FOR_SIDEKIQ: "true"
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"quarantine\"}"
      # Production resources for urgent-cpu-bound discussed in
      # https://gitlab.com/gitlab-com/gl-infra/infrastructure/-/issues/10639
      - name: urgent-cpu-bound
        common:
          labels:
            shard: urgent-cpu-bound
        concurrency: 5
        hpa:
          targetAverageValue: 500m
        minReplicas: 30
        maxReplicas: 130
        memoryKiller:
          checkInterval: 3
          graceTime: 900
          maxRss: 3000000
          shutdownWait: 30
        nodeSelector:
          cloud.google.com/gke-nodepool: sidekiq-urgent-cpu-bound-2
        podLabels:
          shard: urgent-cpu-bound
          deployment: sidekiq-urgent-cpu-bound
        queueSelector: false
        queues: urgent_cpu_bound
        resources:
          requests:
            cpu: 650m
            memory: 2.5G
          limits:
            cpu: 2
            memory: 3.1G
        extraEnv:
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"urgent-cpu-bound\"}"
      # Production resources for this shard discussed in
      # https://gitlab.com/gitlab-com/gl-infra/infrastructure/-/issues/10446
      - name: urgent-other
        common:
          labels:
            shard: urgent-other
        concurrency: 5
        minReplicas: 175
        maxReplicas: 175
        memoryKiller:
          checkInterval: 3
          graceTime: 900
          maxRss: 2900000
          shutdownWait: 30
        nodeSelector:
          cloud.google.com/gke-nodepool: sidekiq-urgent-other-3
        podLabels:
          shard: urgent-other
          deployment: sidekiq-urgent-other
        queueSelector: false
        queues: urgent_other,email_receiver,service_desk_email_receiver
        resources:
          requests:
            cpu: 500m
            memory: 2G
          limits:
            cpu: 1.5
            memory: 3G
        extraEnv:
          GITLAB_SENTRY_EXTRA_TAGS: "{\"type\": \"sidekiq\", \"stage\": \"main\", \"shard\": \"urgent-other\"}"

global:
  email:
    from: gitlab@mg.gitlab.com
  appConfig:
    artifacts:
      bucket: gitlab-gprd-artifacts
    contentSecurityPolicy:
      enabled: true
      report_only: false
      directives:
        connect_src: "'self' https://gitlab.com https://assets.gitlab-static.net wss://gitlab.com https://sentry.gitlab.net https://customers.gitlab.com https://snowplow.trx.gitlab.net https://sourcegraph.com https://ec2.ap-east-1.amazonaws.com https://ec2.ap-northeast-1.amazonaws.com https://ec2.ap-northeast-2.amazonaws.com https://ec2.ap-northeast-3.amazonaws.com https://ec2.ap-south-1.amazonaws.com https://ec2.ap-southeast-1.amazonaws.com https://ec2.ap-southeast-2.amazonaws.com https://ec2.ca-central-1.amazonaws.com https://ec2.eu-central-1.amazonaws.com https://ec2.eu-north-1.amazonaws.com https://ec2.eu-west-1.amazonaws.com https://ec2.eu-west-2.amazonaws.com https://ec2.eu-west-3.amazonaws.com https://ec2.me-south-1.amazonaws.com https://ec2.sa-east-1.amazonaws.com https://ec2.us-east-1.amazonaws.com https://ec2.us-east-2.amazonaws.com https://ec2.us-west-1.amazonaws.com https://ec2.us-west-2.amazonaws.com https://ec2.af-south-1.amazonaws.com https://iam.amazonaws.com"
        frame_ancestors: "'self'"
        frame_src: "'self' https://assets.gitlab-static.net https://www.google.com/recaptcha/ https://www.recaptcha.net/ https://content.googleapis.com https://content-cloudresourcemanager.googleapis.com https://content-compute.googleapis.com https://content-cloudbilling.googleapis.com https://*.codesandbox.io https://customers.gitlab.com"
        img_src: "* data: blob:"
        object_src: "'none'"
        script_src: "'self' 'unsafe-inline' 'unsafe-eval' https://assets.gitlab-static.net https://www.google.com/recaptcha/ https://www.gstatic.com/recaptcha/ https://www.recaptcha.net/ https://apis.google.com"
        style_src: "'self' 'unsafe-inline' https://assets.gitlab-static.net"
        worker_src: "https://assets.gitlab-static.net https://gitlab.com blob: data:"
        report_uri: "https://sentry.gitlab.net/api/105/security/?sentry_key=a42ea3adc19140d9a6424906e12fba86"
    cron_jobs:
      schedule_migrate_external_diffs_worker:
        cron: "*/1 * * * *"
    dependencyProxy:
      enabled: true
      bucket: gitlab-gprd-dependency-proxy
    externalDiffs:
      enabled: true
      bucket: gitlab-gprd-external-diffs
    incomingEmail:
      address: "incoming+%{key}@incoming.gitlab.com"
      user: incoming@gitlab.com
    lfs:
      bucket: gitlab-gprd-lfs-objects
    omniauth:
      providers:
        - secret: gitlab-google-oauth2-v1
        - secret: gitlab-twitter-oauth2-v1
        - secret: gitlab-github-oauth2-v1
        - secret: gitlab-bitbucket-oauth2-v1
        - secret: gitlab-group-saml-oauth2-v1
        - secret: gitlab-salesforce-oauth2-v1
    packages:
      bucket: gitlab-gprd-package-repo
    sentry:
      clientside_dsn: https://526a2f38a53d44e3a8e69bfa001d1e8b@sentry.gitlab.net/15
      dsn: https://c0d96870a71a4217adfe015d2bd926c2:69ccdf0a405c41b78e05ab18d92bfa8d@sentry.gitlab.net/2
      environment: gprd
    serviceDeskEmail:
      enabled: true
      address: "contact-project+%{key}@incoming.gitlab.com"
      user: contact-project@incoming.gitlab.com
    sidekiq:
      routingRules:
        # We cannot migrate these workers yet: https://gitlab.com/gitlab-org/gitlab/-/issues/340630 / https://gitlab.com/gitlab-com/gl-infra/scalability/-/issues/1263 / https://gitlab.com/gitlab-org/gitlab/-/issues/340629
        - ["tags=needs_own_queue", null]
        - ["worker_name=AuthorizedProjectUpdate::UserRefreshFromReplicaWorker,AuthorizedProjectUpdate::UserRefreshWithLowUrgencyWorker", "quarantine"] # move this to the quarantine shard
        - ["worker_name=RepositoryImportWorker", "imports"] # imports
        - ["resource_boundary=cpu&urgency=high", "urgent_cpu_bound"] # urgent-cpu-bound
        - ["resource_boundary=memory", "memory_bound"] # memory-bound
        - ["feature_category=global_search&urgency=throttled", "elasticsearch"] # elasticsearch
        - ["resource_boundary!=cpu&urgency=high", "urgent_other"] # urgent-other
        - ["resource_boundary=cpu&urgency=default,low", "low_urgency_cpu_bound"] # low-urgency-cpu-bound
        - ["feature_category=database&urgency=throttled", "database_throttled"] # database-throttled
        - ["feature_category=gitaly&urgency=throttled", "gitaly_throttled"] # gitaly-throttled
        - ["*", "default"] # catchall on k8s
    terraformState:
      enabled: true
      bucket: gitlab-gprd-terraform-state
    uploads:
      bucket: gitlab-gprd-uploads
    extra:
      oneTrustId: 7f944245-c5cd-4eed-a90e-dd955adfdd08

  hosts:
    gitlab:
      name: gitlab.com
    kas:
      name: kas.gitlab.com
    registry:
      name: registry.gitlab.com

  redis:
    cache:
      host: gprd-redis-cache
      password:
        enabled: true
        key: secret
        secret: gitlab-redis-credential-v1
      sentinels:
      - host: redis-cache-sentinel-01-db-gprd.c.gitlab-production.internal
        port: 26379
      - host: redis-cache-sentinel-02-db-gprd.c.gitlab-production.internal
        port: 26379
      - host: redis-cache-sentinel-03-db-gprd.c.gitlab-production.internal
        port: 26379
    host: gprd-redis
    password:
      enabled: true
      key: secret
      secret: gitlab-redis-credential-v1
    queues:
      host: gprd-redis-sidekiq
      password:
        enabled: true
        key: secret
        secret: gitlab-redis-credential-v1
      sentinels:
      - host: redis-sidekiq-01-db-gprd.c.gitlab-production.internal
        port: 26379
      - host: redis-sidekiq-02-db-gprd.c.gitlab-production.internal
        port: 26379
      - host: redis-sidekiq-03-db-gprd.c.gitlab-production.internal
        port: 26379
    rateLimiting:
      host: gprd-redis-ratelimiting
      password:
        enabled: true
        key: secret
        secret: gitlab-redis-credential-v1
      sentinels:
      - host: redis-ratelimiting-01-db-gprd.c.gitlab-production.internal
        port: 26379
      - host: redis-ratelimiting-02-db-gprd.c.gitlab-production.internal
        port: 26379
      - host: redis-ratelimiting-03-db-gprd.c.gitlab-production.internal
        port: 26379
    sentinels:
    - host: redis-01-db-gprd.c.gitlab-production.internal
      port: 26379
    - host: redis-02-db-gprd.c.gitlab-production.internal
      port: 26379
    - host: redis-03-db-gprd.c.gitlab-production.internal
      port: 26379
    sharedState:
      host: gprd-redis
      password:
        enabled: true
        key: secret
        secret: gitlab-redis-credential-v1
      sentinels:
      - host: redis-01-db-gprd.c.gitlab-production.internal
        port: 26379
      - host: redis-02-db-gprd.c.gitlab-production.internal
        port: 26379
      - host: redis-03-db-gprd.c.gitlab-production.internal
        port: 26379
    traceChunks:
      host: gprd-redis-tracechunks
      password:
        enabled: true
        key: secret
        secret: gitlab-redis-credential-v1
      sentinels:
      - host: redis-tracechunks-01-db-gprd.c.gitlab-production.internal
        port: 26379
      - host: redis-tracechunks-02-db-gprd.c.gitlab-production.internal
        port: 26379
      - host: redis-tracechunks-03-db-gprd.c.gitlab-production.internal
        port: 26379

  pages:
    host: gitlab.io

  psql:
    host: pgbouncer.int.gprd.gitlab.net
    port: 6432
    prepared_statements: false
    load_balancing:
      discover:
        nameserver: <%= File.read('/etc/gitlab/instance_name').strip %>
        record: db-replica.service.consul.
        record_type: SRV
        port: 8600
        use_tcp: true

  smtp:
    domain: mg.gitlab.com
    user_name: dotcom-rotated@mg.gitlab.com
