---

#############################################################
# Unfortunately the version tag needs to be repeated
# in multiple places here because variables are not supported
# in the include section
# https://gitlab.com/gitlab-org/gitlab-ce/issues/65621

include:
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/deploy.yml"
    ref: 'v1.10.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/except-com.yml"
    ref: 'v1.10.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/except-ops.yml"
    ref: 'v1.10.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/cluster-init-before-script.yml"
    ref: 'v1.10.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/shellcheck.yml"
    ref: 'v1.10.0'
  - template: Container-Scanning.gitlab-ci.yml

variables:
  CI_IMAGE_VERSION: 'v1.10.0'

#############################################################

.pre:
  environment:
    name: pre
    url: https://pre.gitlab.com

.gstg:
  environment:
    name: gstg
    url: https://staging.gitlab.com

.gprd:
  environment:
    name: gprd
    url: https://gitlab.com

stages:
  - check
  - dryrun-check
  - dryrun
  - non-prod:secrets:deploy
  - non-prod:deploy
  - gprd-cny:secrets:deploy
  - gprd-cny:deploy
  - gprd:secrets:deploy
  - gprd:deploy

#########################################
# Container scanning for Registry
# This is takes the tag that is currently set in
# the production value file

container_scanning:
  stage: check
  # This is the imported job
  # and will never run due to the
  # following except condition because the imported
  # job only runs on branches.
  #
  # It is necessary
  # so we can import the job and extend it for
  # the different environments.
  except:
    - branches
  variables:
    GIT_STRATEGY: fetch
    CI_APPLICATION_REPOSITORY: dev.gitlab.org:5005/gitlab/charts/components/images/gitlab-container-registry

# The following environment jobs are identical
# except they read the tag version from the corresponding
# environment file

pre:container_scan:
  variables:
    CI_APPLICATION_TAG: v2.8.0-gitlab
  extends:
    - container_scanning
    - .except-ops
  stage: check

gstg:container_scan:
  variables:
    CI_APPLICATION_TAG: v2.8.0-gitlab
  extends:
    - container_scanning
    - .except-ops
  stage: check

gprd:container_scan:
  variables:
    CI_APPLICATION_TAG: v2.8.0-gitlab
  extends:
    - container_scanning
    - .except-ops
  stage: check

#########################################

############################ CI JOBS ################################
#####################################################################

### PreProd

pre:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .pre
  script:
    - bin/k-ctl -D upgrade

pre:secrets:check:
  stage: dryrun-check
  extends:
    - .deploy
    - .pre
  allow_failure: true
  script:
    - helmfile -e pre diff --suppress-secrets --detailed-exitcode

pre:secrets:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .pre
  script:
    - helmfile -e pre diff --suppress-secrets

pre:secrets:deploy:
  stage: non-prod:secrets:deploy
  extends:
    - .deploy
    - .pre
  script:
    - helmfile -e pre apply --suppress-secrets
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

pre:upgrade:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .pre
  script:
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

### Staging

gstg:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gstg
  script:
    - bin/k-ctl -D upgrade

gstg:secrets:check:
  stage: dryrun-check
  extends:
    - .deploy
    - .gstg
  allow_failure: true
  script:
    - helmfile -e gstg diff --suppress-secrets --detailed-exitcode

gstg:secrets:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gstg
  script:
    - helmfile -e gstg diff --suppress-secrets

gstg:secrets:deploy:
  stage: non-prod:secrets:deploy
  extends:
    - .deploy
    - .gstg
  script:
    - helmfile -e gstg apply --suppress-secrets
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

gstg:upgrade:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg
  script:
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

### Canary

gprd-cny:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl -D -s cny upgrade

gprd-cny:secrets:check:
  stage: dryrun-check
  extends:
    - .deploy
    - .gprd
  allow_failure: true
  script:
    - helmfile -e cny apply --suppress-secrets --detailed-exitcode

gprd-cny:secrets:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
  script:
    - helmfile -e cny apply --suppress-secrets --detailed-exitcode

gprd-cny:secrets:deploy:
  stage: gprd-cny:secrets:deploy
  extends:
    - .deploy
    - .gprd
  script:
    - helmfile -e cny apply --suppress-secrets
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

gprd-cny:upgrade:
  stage: gprd-cny:deploy
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl -s cny upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

### Producion

gprd:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl -D upgrade

gprd:secrets:check:
  stage: dryrun-check
  extends:
    - .deploy
    - .gprd
  allow_failure: true
  script:
    - helmfile -e gprd diff --suppress-secrets --detailed-exitcode

gprd:secrets:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
  script:
    - helmfile -e gprd diff --suppress-secrets
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

gprd:secrets:deploy:
  stage: gprd:secrets:deploy
  extends:
    - .deploy
    - .gprd
  script:
    - helmfile -e gprd apply --suppress-secrets
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

gprd:upgrade:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd
  when: manual
  script:
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"
