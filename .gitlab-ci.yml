---

#############################################################
# Unfortunately the version tag needs to be repeated
# in multiple places here because variables are not supported
# in the include section
# https://gitlab.com/gitlab-org/gitlab-ce/issues/65621

include:
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/except-com.yml"
    ref: 'v1.7.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/except-ops.yml"
    ref: 'v1.7.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/cluster-init-before-script.yml"
    ref: 'v1.7.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/shellcheck.yml"
    ref: 'v1.7.0'
  - template: Container-Scanning.gitlab-ci.yml

variables:
  CI_IMAGE_VERSION: 'v1.7.0'

#############################################################

.deploy:
  image: "${CI_REGISTRY}/gitlab-com/gl-infra/k8s-workloads/common/k8-helm-ci:$CI_IMAGE_VERSION"
  extends:
    - .except-com
    - .cluster-init-before-script

.pre:
  environment:
    name: pre
    url: https://pre.gitlab.com

.staging:
  environment:
    name: gstg
    url: https://staging.gitlab.com

.production:
  environment:
    name: gprd
    url: https://gitlab.com

stages:
  - check
  - dryrun
  - deploy
  - deploy-canary
  - deploy-production

#########################################
# Container scanning for Registry
# This is takes the tag that is currently set in
# the production value file

container_scanning:
  stage: check
  # This is the imported job
  # and will never run due to the
  # following except condition because the imported
  # job only runs on branches.
  #
  # It is necessary
  # so we can import the job and extend it for
  # the different environments.
  except:
    - branches

# The following environment jobs are identical
# except they read the tag version from the corresponding
# environment file

gprd_container_scanning:
  extends:
    - container_scanning
    - .except-ops
  variables:
    GIT_STRATEGY: fetch
  stage: check
  before_script:
    - export CI_APPLICATION_REPOSITORY=docker.io/library/registry
    - apk add grep
    - >
      export CI_APPLICATION_TAG=$(grep -Po "(?<=tag: ')[^']*" gprd.yaml)
    - echo "Scanning $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG"

gstg_container_scanning:
  extends:
    - container_scanning
    - .except-ops
  variables:
    GIT_STRATEGY: fetch
  stage: check
  before_script:
    - export CI_APPLICATION_REPOSITORY=docker.io/library/registry
    - apk add grep
    - >
      export CI_APPLICATION_TAG=$(grep -Po "(?<=tag: ')[^']*" gstg.yaml)
    - echo "Scanning $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG"

pre_container_scanning:
  extends:
    - container_scanning
    - .except-ops
  variables:
    GIT_STRATEGY: fetch
  stage: check
  before_script:
    - export CI_APPLICATION_REPOSITORY=docker.io/library/registry
    - apk add grep
    - >
      export CI_APPLICATION_TAG=$(grep -Po "(?<=tag: ')[^']*" pre.yaml)
    - echo "Scanning $CI_APPLICATION_REPOSITORY:$CI_APPLICATION_TAG"

#########################################

############################ CI JOBS ################################
#####################################################################

### PreProd

upgrade_pre_dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .pre
  script:
    - bin/k-ctl -D upgrade

upgrade_pre:
  stage: deploy
  extends:
    - .deploy
    - .pre
  script:
    - bin/k-ctl upgrade
  only:
    refs:
      - master

### Staging

upgrade_staging_dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .staging
  script:
    - bin/k-ctl -D upgrade

upgrade_staging:
  stage: deploy
  extends:
    - .deploy
    - .staging
  script:
    - bin/k-ctl upgrade
  only:
    refs:
      - master

### Canary

upgrade_canary_dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .production
  script:
    - bin/k-ctl -D -s cny upgrade

upgrade_canary:
  stage: deploy-canary
  extends:
    - .deploy
    - .production
  script:
    - bin/k-ctl -s cny upgrade
  only:
    refs:
      - master

### Producion

upgrade_production_dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .production
  script:
    - bin/k-ctl -D upgrade

upgrade_production:
  stage: deploy-production
  extends:
    - .deploy
    - .production
  when: manual
  script:
    - bin/k-ctl upgrade
  only:
    refs:
      - master
