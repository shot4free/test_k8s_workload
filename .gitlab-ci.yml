---

#############################################################
# Unfortunately the version tag needs to be repeated
# in multiple places here because variables are not supported
# in the include section
# https://gitlab.com/gitlab-org/gitlab-ce/issues/65621

include:
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/version-checks.yml"
    ref: 'v2.2.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/deploy.yml"
    ref: 'v2.2.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/except-com.yml"
    ref: 'v2.2.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/except-ops.yml"
    ref: 'v2.2.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/cluster-init-before-script.yml"
    ref: 'v2.2.0'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/shellcheck.yml"
    ref: 'v2.2.0'
  - template: Container-Scanning.gitlab-ci.yml

variables:
  CI_IMAGE_VERSION: 'v2.2.0'
  AUTO_DEPLOY: 'false'

#############################################################

.pre:
  environment:
    name: pre
    url: https://pre.gitlab.com

.gstg:
  environment:
    name: gstg
    url: https://staging.gitlab.com

.gprd:
  environment:
    name: gprd
    url: https://gitlab.com

.only-auto-deploy-false:
  only:
    variables:
      - $AUTO_DEPLOY == "false"

stages:
  - check
  - dryrun-check
  - dryrun
  - non-prod:deploy
  - gprd-cny:deploy
  - gprd:deploy

#########################################
# Attempts to find an MR on .com and add
# a link to the pipeline that runs on ops

notify_com_mr:
  image: "${CI_REGISTRY}/gitlab-com/gl-infra/k8s-workloads/common/k8-helm-ci:${CI_IMAGE_VERSION}"
  extends:
    - .except-com
    - .only-auto-deploy-false
  stage: check
  script:
    - /k8s-workloads/notify-mr
  # It is possible that this job will fail if a branch is created
  # without a corresponding MR, for this reason we allow it to
  # fail
  allow_failure: true

#########################################
# Container scanning for Registry
# This is takes the tag that is currently set in
# the production value file

container_scanning:
  stage: check
  # This is the imported job
  # and will never run due to the
  # following except condition because the imported
  # job only runs on branches.
  #
  # It is necessary
  # so we can import the job and extend it for
  # the different environments.
  variables:
    GIT_STRATEGY: fetch
    CI_APPLICATION_REPOSITORY: dev.gitlab.org:5005/gitlab/charts/components/images/gitlab-container-registry
  rules:
    - if: $AUTO_DEPLOY == "true"
      when: never
    - if: $CI_COMMIT_BRANCH
      when: never

# The following environment jobs are identical
# except they read the tag version from the corresponding
# environment file

pre:container_scan:
  variables:
    CI_APPLICATION_TAG: v2.9.1-gitlab
  extends:
    - container_scanning
    - .except-ops
  stage: check

gstg:container_scan:
  variables:
    CI_APPLICATION_TAG: v2.9.1-gitlab
  extends:
    - container_scanning
    - .except-ops
  stage: check

gprd:container_scan:
  variables:
    CI_APPLICATION_TAG: v2.9.1-gitlab
  extends:
    - container_scanning
    - .except-ops
  stage: check

#########################################

############################ CI JOBS ################################
#####################################################################

### PreProd

pre:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .pre
    - .only-auto-deploy-false
  script:
    - bin/k-ctl -D upgrade

pre:upgrade:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .pre
    - .only-auto-deploy-false
  script:
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

### Staging

gstg:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gstg
    - .only-auto-deploy-false
  script:
    - bin/k-ctl -D upgrade

gstg:upgrade:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg
    - .only-auto-deploy-false
  script:
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

### Canary

gprd-cny:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
    - .only-auto-deploy-false
  script:
    - bin/k-ctl -D -s cny upgrade

gprd-cny:upgrade:
  stage: gprd-cny:deploy
  extends:
    - .deploy
    - .gprd
    - .only-auto-deploy-false
  script:
    - bin/k-ctl -s cny upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

### Producion

gprd:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
    - .only-auto-deploy-false
  script:
    - bin/k-ctl -D upgrade

gprd:upgrade:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd
    - .only-auto-deploy-false
  when: manual
  script:
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

###############################################################################
### Auto Deploy Jobs ###
#
# Jobs here are specific to auto-deploys.  These are triggered by deployer
# using the specific variables:
#   * ENVIRONMENT
#   * DRY_RUN
#   * AUTO_DEPLOY

### PreProd

pre:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .pre
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "pre" && $AUTO_DEPLOY == "true"

pre:auto-deploy:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .pre
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "pre" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

### Staging

gstg:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gstg
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "gstg" && $AUTO_DEPLOY == "true"

gstg:auto-deploy:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "gstg" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

### Canary

gprd-cny:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl -D -s cny upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd-cny" && $AUTO_DEPLOY == "true"

gprd-cny:auto-deploy:
  stage: gprd-cny:deploy
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl -s cny upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd-cny" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

### Producion

gprd:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd" && $AUTO_DEPLOY == "true"

gprd:auto-deploy:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"
