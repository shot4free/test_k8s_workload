---

#############################################################
# Unfortunately the version tag needs to be repeated
# in multiple places here because variables are not supported
# in the include section
# https://gitlab.com/gitlab-org/gitlab-ce/issues/65621

include:
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/except-com.yml"
    ref: 'v3.7.7'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/except-ops.yml"
    ref: 'v3.7.7'
  - project: "gitlab-com/gl-infra/k8s-workloads/common"
    file: "/ci/cluster-init-before-script.yml"
    ref: 'v3.7.7'

variables:
  CI_IMAGE_VERSION: 'v3.7.7'
  AUTO_DEPLOY: 'false'

#############################################################

.deploy:
  image: "${CI_REGISTRY}/gitlab-com/gl-infra/k8s-workloads/common/k8-helm-ci:${CI_IMAGE_VERSION}"
  extends:
    - .except-com
    - .cluster-init-before-script
  tags:
    - k8s-workloads

.pre-base:
  variables:
    PROJECT: gitlab-pre
    REGION: us-east1
    USE_HELM3: "true"
  environment:
    name: pre
    url: https://pre.gitlab.com

.pre:
  extends:
    - .pre-base
  variables:
    CLUSTER: pre-gitlab-gke
  environment:
    name: pre

.gstg-base:
  variables:
    PROJECT: gitlab-staging-1
    USE_HELM3: "true"
  environment:
    url: https://staging.gitlab.com

.gstg:
  extends:
    - .gstg-base
  variables:
    CLUSTER: gstg-gitlab-gke
    REGION: us-east1
  environment:
    name: gstg
  resource_group: gstg

.gstg-us-east1-b:
  extends:
    - .gstg-base
  variables:
    CLUSTER: gstg-us-east1-b
    REGION: us-east1-b
  environment:
    name: gstg-us-east1-b
  resource_group: gstg-us-east1-b

.gstg-us-east1-c:
  extends:
    - .gstg-base
  variables:
    CLUSTER: gstg-us-east1-c
    REGION: us-east1-c
  environment:
    name: gstg-us-east1-c
  resource_group: gstg-us-east1-c

.gstg-us-east1-d:
  extends:
    - .gstg-base
  variables:
    CLUSTER: gstg-us-east1-d
    REGION: us-east1-d
  environment:
    name: gstg-us-east1-d
  resource_group: gstg-us-east1-d

.gprd-base:
  variables:
    PROJECT: gitlab-production
    USE_HELM3: "true"
  environment:
    url: https://gitlab.com

.gprd:
  extends:
    - .gprd-base
  variables:
    CLUSTER: gprd-gitlab-gke
    REGION: us-east1
  environment:
    name: gprd
  resource_group: gprd

.gprd-us-east1-b:
  extends:
    - .gprd-base
  variables:
    CLUSTER: gprd-us-east1-b
    REGION: us-east1-b
  environment:
    name: gprd-us-east1-b
  resource_group: gprd-us-east1-b

.gprd-us-east1-c:
  extends:
    - .gprd-base
  variables:
    CLUSTER: gprd-us-east1-c
    REGION: us-east1-c
  environment:
    name: gprd-us-east1-c
  resource_group: gprd-us-east1-c

.gprd-us-east1-d:
  extends:
    - .gprd-base
  variables:
    CLUSTER: gprd-us-east1-d
    REGION: us-east1-d
  environment:
    name: gprd-us-east1-d
  resource_group: gprd-us-east1-d

.only-auto-deploy-false:
  only:
    variables:
      - $AUTO_DEPLOY == "false"

.only-auto-deploy-false-and-config-changes:
  only:
    variables:
      - $AUTO_DEPLOY == "false"
    changes:
      - 'CHART_VERSION'
      - 'bases/**/*'
      - 'bin/**/*'
      - 'releases/**/*'
      - '*.yaml'
      - .gitlab-ci.yml
      - CHEF_CONFIG_UPDATE

.trigger-qa-smoke:
  extends:
    - .except-com
    # Skip QA smoke tests for auto-deploy because
    # QA is run in the context of the deployer
    # pipeline
    - .only-auto-deploy-false-and-config-changes
  image: alpine:3.12.0
  # This script can be replaced with the `trigger:` keyword
  # when the product supports retries for triggers
  # https://gitlab.com/gitlab-org/gitlab/-/issues/32559
  # TODO: Remove allow_failure when these jobs are reliable
  allow_failure: true
  except:
    variables:
      - $CI_API_V4_URL == "https://gitlab.com/api/v4"
      - $CI_COMMIT_REF_NAME != 'master'
    refs:
      - tags
  script:
    - |
      if [[ $SKIP_QA == "true" ]]; then
        echo "Skipping QA because SKIP_QA is set to true"
        exit 0
      fi
    - apk add curl jq
    # project=full/path/to/project
    - |
      echo "Sending trigger to $project"
      # URL encode the project
      project=$(echo -n "$project" | jq -sRr @uri)
      trigger_url="$CI_API_V4_URL/projects/$project/trigger/pipeline"
      resp=$(curl -s --request POST --form "variables[SMOKE_ONLY]=true" --form "token=$CI_JOB_TOKEN" --form ref=master $trigger_url)
      id=$(echo "$resp" | jq -r ".id")
      web_url=$(echo "$resp" | jq -r ".web_url")
    - |
      echo "Waiting for pipeline $web_url ..."
      status_url="$CI_API_V4_URL/projects/$project/pipelines/$id"
      for retry in $(seq 1 120); do
        resp=$(curl -s --header "PRIVATE-TOKEN: $GITLAB_OPS_API_TOKEN" "$status_url")
        status=$(echo "$resp" | jq -r '.status')
        echo "Got pipeline status $status, retry $retry/10"
        [[ $status == "success" || $status == "failed" || $status == "canceled" ]] && break
        sleep 30
      done

      if [[ $status != "success" ]]; then
        echo "$web_url has status $status, failing"
        exit 1
      fi

stages:
  - check
  - dryrun-check
  - dryrun
  - non-prod:deploy
  - non-prod:QA
  - gprd-cny:deploy
  - gprd:deploy

#### Check jobs

shellcheck:
  image:
    name: nlknguyen/alpine-shellcheck
    entrypoint: ["/bin/sh", "-c"]
  stage: check
  script:
    - find bin/ -maxdepth 1 -type f | xargs -r shellcheck -e SC1090,SC1091
  except:
    variables:
      - $AUTO_DEPLOY == "true"
      - $CI_COMMIT_REF_NAME == 'master'

shfmt:
  image:
    name: peterdavehello/shfmt:2.6.4
    entrypoint: ["/bin/sh", "-c"]
  stage: check
  script:
    - find bin/ -maxdepth 1 -type f | xargs -r shfmt -i 2 -ci -l -d
  except:
    variables:
      - $AUTO_DEPLOY == "true"
      - $CI_COMMIT_REF_NAME == 'master'

tooling:
  image: "${CI_REGISTRY}/gitlab-com/gl-infra/k8s-workloads/common/k8-helm-ci:${CI_IMAGE_VERSION}"
  stage: check
  script:
    - bin/k-ctl -t
  except:
    variables:
      - $AUTO_DEPLOY == "true"
      - $CI_COMMIT_REF_NAME == 'master'

assert_consistent_tool_versions:
  stage: check
  image: "${CI_REGISTRY}/gitlab-com/gl-infra/k8s-workloads/common/k8-helm-ci:${CI_IMAGE_VERSION}"
  script: "/k8s-workloads/assert-tool-versions.sh"
  allow_failure: true
  except:
    variables:
      - $CI_API_V4_URL == "https://ops.gitlab.net/api/v4"
      - $CI_COMMIT_REF_NAME == 'master'

#########################################
# Attempts to find an MR on .com and add
# a link to the pipeline that runs on ops

notify_com_mr:
  image: "${CI_REGISTRY}/gitlab-com/gl-infra/k8s-workloads/common/notify-mr:${CI_IMAGE_VERSION}"
  extends:
    - .except-com
    - .only-auto-deploy-false
  stage: check
  script:
    - notify-mr -s
  # It is possible that this job will fail if a branch is created
  # without a corresponding MR, for this reason we allow it to
  # fail
  allow_failure: true

############################ CI JOBS ################################
#####################################################################

### PreProd

pre:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .pre
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/k-ctl -D upgrade

pre:upgrade:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .pre
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/grafana-annotate -e $CI_ENVIRONMENT_NAME
    - bin/k-ctl upgrade
  resource_group: pre
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

### Staging

gstg:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gstg
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/k-ctl -D upgrade

gstg-us-east1-b:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gstg-us-east1-b
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/k-ctl -D upgrade

gstg-us-east1-c:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gstg-us-east1-c
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/k-ctl -D upgrade

gstg-us-east1-d:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gstg-us-east1-d
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/k-ctl -D upgrade

gstg:upgrade:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/grafana-annotate -e $CI_ENVIRONMENT_NAME
    - bin/k-ctl upgrade
  resource_group: gstg
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

gstg-us-east1-b:upgrade:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg-us-east1-b
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/grafana-annotate -e $CI_ENVIRONMENT_NAME
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

gstg-us-east1-c:upgrade:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg-us-east1-c
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/grafana-annotate -e $CI_ENVIRONMENT_NAME
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

gstg-us-east1-d:upgrade:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg-us-east1-d
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/grafana-annotate -e $CI_ENVIRONMENT_NAME
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

### Canary

gprd-cny:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/k-ctl -D -s cny upgrade
  resource_group: gprd-cny

gprd-cny:upgrade:
  stage: gprd-cny:deploy
  extends:
    - .deploy
    - .gprd
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/grafana-annotate -e $CI_ENVIRONMENT_NAME -s cny
    - bin/k-ctl -s cny upgrade
  resource_group: gprd-cny
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

### Producion

gprd:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/k-ctl -D upgrade

gprd-us-east1-b:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd-us-east1-b
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/k-ctl -D upgrade

gprd-us-east1-c:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd-us-east1-c
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/k-ctl -D upgrade

gprd-us-east1-d:dryrun:
  stage: dryrun
  extends:
    - .deploy
    - .gprd-us-east1-d
    - .only-auto-deploy-false-and-config-changes
  script:
    - bin/k-ctl -D upgrade

gprd:upgrade:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd
    - .only-auto-deploy-false-and-config-changes
  when: manual
  script:
    - bin/grafana-annotate -e $CI_ENVIRONMENT_NAME
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

gprd-us-east1-b:upgrade:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd-us-east1-b
    - .only-auto-deploy-false-and-config-changes
  when: manual
  script:
    - bin/grafana-annotate -e $CI_ENVIRONMENT_NAME
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

gprd-us-east1-c:upgrade:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd-us-east1-c
    - .only-auto-deploy-false-and-config-changes
  when: manual
  script:
    - bin/grafana-annotate -e $CI_ENVIRONMENT_NAME
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

gprd-us-east1-d:upgrade:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd-us-east1-d
    - .only-auto-deploy-false-and-config-changes
  when: manual
  script:
    - bin/grafana-annotate -e $CI_ENVIRONMENT_NAME
    - bin/k-ctl upgrade
  only:
    refs:
      - master
  variables:
    DRY_RUN: "false"

### QA jobs

pre:qa:
  extends:
    - .trigger-qa-smoke
  stage: non-prod:QA
  variables:
    project: gitlab-org/quality/preprod
  only:
    changes:
      - 'CHART_VERSION'
      - '*.yaml'
      - 'releases/gitlab-secrets/*'
      - 'releases/gitlab/helmfile.yaml'
      - 'releases/gitlab/values/jq/*'
      - 'releases/gitlab/values/values*'
      - 'releases/gitlab/values/pre*'

gstg:qa:
  extends:
    - .trigger-qa-smoke
  stage: non-prod:QA
  variables:
    project: gitlab-org/quality/staging
  only:
    changes:
      - 'CHART_VERSION'
      - '*.yaml'
      - 'releases/gitlab-secrets/*'
      - 'releases/gitlab/helmfile.yaml'
      - 'releases/gitlab/values/jq/*'
      - 'releases/gitlab/values/values*'
      - 'releases/gitlab/values/gstg*'

###############################################################################
### Auto Deploy Jobs ###
#
# Jobs here are specific to auto-deploys.  These are triggered by deployer
# using the specific variables:
#   * ENVIRONMENT
#   * DRY_RUN
#   * AUTO_DEPLOY

### PreProd

pre:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .pre
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "pre" && $AUTO_DEPLOY == "true"

pre:auto-deploy:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .pre
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "pre" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

### Staging

gstg:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gstg
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "gstg" && $AUTO_DEPLOY == "true"

gstg-us-east1-b:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gstg-us-east1-b
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "gstg" && $AUTO_DEPLOY == "true"

gstg-us-east1-c:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gstg-us-east1-c
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "gstg" && $AUTO_DEPLOY == "true"

gstg-us-east1-d:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gstg-us-east1-d
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "gstg" && $AUTO_DEPLOY == "true"

gstg:auto-deploy:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "gstg" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

gstg-us-east1-b:auto-deploy:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg-us-east1-b
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "gstg" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

gstg-us-east1-c:auto-deploy:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg-us-east1-c
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "gstg" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

gstg-us-east1-d:auto-deploy:
  stage: non-prod:deploy
  extends:
    - .deploy
    - .gstg-us-east1-d
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "gstg" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

### Canary

gprd-cny:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl -D -s cny upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd-cny" && $AUTO_DEPLOY == "true"
  resource_group: gprd-cny

gprd-cny:auto-deploy:
  stage: gprd-cny:deploy
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl -s cny upgrade
  resource_group: gprd-cny
  only:
    variables:
      - $ENVIRONMENT == "gprd-cny" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

### Producion

gprd:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd" && $AUTO_DEPLOY == "true"

gprd-us-east1-b:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gprd-us-east1-b
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd" && $AUTO_DEPLOY == "true"

gprd-us-east1-c:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gprd-us-east1-c
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd" && $AUTO_DEPLOY == "true"

gprd-us-east1-d:dryrun:auto-deploy:
  stage: dryrun
  extends:
    - .deploy
    - .gprd-us-east1-d
  script:
    - bin/k-ctl -D upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd" && $AUTO_DEPLOY == "true"

gprd:auto-deploy:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

gprd-us-east1-b:auto-deploy:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd-us-east1-b
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

gprd-us-east1-c:auto-deploy:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd-us-east1-c
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"

gprd-us-east1-d:auto-deploy:
  stage: gprd:deploy
  extends:
    - .deploy
    - .gprd-us-east1-d
  script:
    - bin/k-ctl upgrade
  only:
    variables:
      - $ENVIRONMENT == "gprd" && $DRY_RUN == "false" && $AUTO_DEPLOY == "true"
